{"ast":null,"code":"import \"../../../src/components/VTooltip/VTooltip.sass\"; // Mixins\n\nimport Activatable from '../../mixins/activatable';\nimport Colorable from '../../mixins/colorable';\nimport Delayable from '../../mixins/delayable';\nimport Dependent from '../../mixins/dependent';\nimport Menuable from '../../mixins/menuable'; // Helpers\n\nimport { convertToUnit, keyCodes, getSlotType } from '../../util/helpers';\nimport { consoleError } from '../../util/console';\nimport mixins from '../../util/mixins';\n/* @vue/component */\n\nexport default mixins(Colorable, Delayable, Dependent, Menuable).extend({\n  name: 'v-tooltip',\n  props: {\n    closeDelay: {\n      type: [Number, String],\n      default: 0\n    },\n    disabled: Boolean,\n    openDelay: {\n      type: [Number, String],\n      default: 0\n    },\n    openOnHover: {\n      type: Boolean,\n      default: true\n    },\n    openOnFocus: {\n      type: Boolean,\n      default: true\n    },\n    tag: {\n      type: String,\n      default: 'span'\n    },\n    transition: String\n  },\n  data: () => ({\n    calculatedMinWidth: 0,\n    closeDependents: false\n  }),\n  computed: {\n    calculatedLeft() {\n      const {\n        activator,\n        content\n      } = this.dimensions;\n      const unknown = !this.bottom && !this.left && !this.top && !this.right;\n      const activatorLeft = this.attach !== false ? activator.offsetLeft : activator.left;\n      let left = 0;\n\n      if (this.top || this.bottom || unknown) {\n        left = activatorLeft + activator.width / 2 - content.width / 2;\n      } else if (this.left || this.right) {\n        left = activatorLeft + (this.right ? activator.width : -content.width) + (this.right ? 10 : -10);\n      }\n\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft);\n      if (this.nudgeRight) left += parseInt(this.nudgeRight);\n      return `${this.calcXOverflow(left, this.dimensions.content.width)}px`;\n    },\n\n    calculatedTop() {\n      const {\n        activator,\n        content\n      } = this.dimensions;\n      const activatorTop = this.attach !== false ? activator.offsetTop : activator.top;\n      let top = 0;\n\n      if (this.top || this.bottom) {\n        top = activatorTop + (this.bottom ? activator.height : -content.height) + (this.bottom ? 10 : -10);\n      } else if (this.left || this.right) {\n        top = activatorTop + activator.height / 2 - content.height / 2;\n      }\n\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop);\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom);\n      if (this.attach === false) top += this.pageYOffset;\n      return `${this.calcYOverflow(top)}px`;\n    },\n\n    classes() {\n      return {\n        'v-tooltip--top': this.top,\n        'v-tooltip--right': this.right,\n        'v-tooltip--bottom': this.bottom,\n        'v-tooltip--left': this.left,\n        'v-tooltip--attached': this.attach === '' || this.attach === true || this.attach === 'attach'\n      };\n    },\n\n    computedTransition() {\n      if (this.transition) return this.transition;\n      return this.isActive ? 'scale-transition' : 'fade-transition';\n    },\n\n    offsetY() {\n      return this.top || this.bottom;\n    },\n\n    offsetX() {\n      return this.left || this.right;\n    },\n\n    styles() {\n      return {\n        left: this.calculatedLeft,\n        maxWidth: convertToUnit(this.maxWidth),\n        minWidth: convertToUnit(this.minWidth),\n        top: this.calculatedTop,\n        zIndex: this.zIndex || this.activeZIndex\n      };\n    }\n\n  },\n\n  beforeMount() {\n    this.$nextTick(() => {\n      this.value && this.callActivate();\n    });\n  },\n\n  mounted() {\n    if (getSlotType(this, 'activator', true) === 'v-slot') {\n      consoleError(`v-tooltip's activator slot must be bound, try '<template #activator=\"data\"><v-btn v-on=\"data.on>'`, this);\n    }\n  },\n\n  methods: {\n    activate() {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions(); // Start the transition\n\n      requestAnimationFrame(this.startTransition);\n    },\n\n    deactivate() {\n      this.runDelay('close');\n    },\n\n    genActivatorListeners() {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this);\n\n      if (this.openOnFocus) {\n        listeners.focus = e => {\n          this.getActivator(e);\n          this.runDelay('open');\n        };\n\n        listeners.blur = e => {\n          this.getActivator(e);\n          this.runDelay('close');\n        };\n      }\n\n      listeners.keydown = e => {\n        if (e.keyCode === keyCodes.esc) {\n          this.getActivator(e);\n          this.runDelay('close');\n        }\n      };\n\n      return listeners;\n    },\n\n    genActivatorAttributes() {\n      return {\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive)\n      };\n    },\n\n    genTransition() {\n      const content = this.genContent();\n      if (!this.computedTransition) return content;\n      return this.$createElement('transition', {\n        props: {\n          name: this.computedTransition\n        }\n      }, [content]);\n    },\n\n    genContent() {\n      return this.$createElement('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-tooltip__content',\n        class: {\n          [this.contentClass]: true,\n          menuable__content__active: this.isActive,\n          'v-tooltip__content--fixed': this.activatorFixed\n        },\n        style: this.styles,\n        attrs: this.getScopeIdAttrs(),\n        directives: [{\n          name: 'show',\n          value: this.isContentActive\n        }],\n        ref: 'content'\n      }), this.getContentSlot());\n    }\n\n  },\n\n  render(h) {\n    return h(this.tag, {\n      staticClass: 'v-tooltip',\n      class: this.classes\n    }, [this.showLazyContent(() => [this.genTransition()]), this.genActivator()]);\n  }\n\n});","map":{"version":3,"mappings":"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","names":["Activatable","Colorable","Delayable","Dependent","Menuable","convertToUnit","keyCodes","getSlotType","consoleError","mixins","extend","name","props","closeDelay","type","Number","String","default","disabled","Boolean","openDelay","openOnHover","openOnFocus","tag","transition","data","calculatedMinWidth","closeDependents","computed","calculatedLeft","activator","content","dimensions","unknown","bottom","left","top","right","activatorLeft","attach","offsetLeft","width","nudgeLeft","parseInt","nudgeRight","calcXOverflow","calculatedTop","activatorTop","offsetTop","height","nudgeTop","nudgeBottom","pageYOffset","calcYOverflow","classes","computedTransition","isActive","offsetY","offsetX","styles","maxWidth","minWidth","zIndex","activeZIndex","beforeMount","$nextTick","value","callActivate","mounted","methods","activate","updateDimensions","requestAnimationFrame","startTransition","deactivate","runDelay","genActivatorListeners","listeners","options","call","focus","e","getActivator","blur","keydown","keyCode","esc","genActivatorAttributes","genTransition","genContent","$createElement","setBackgroundColor","color","staticClass","class","contentClass","menuable__content__active","activatorFixed","style","attrs","getScopeIdAttrs","directives","isContentActive","ref","getContentSlot","render","h","showLazyContent","genActivator"],"sourceRoot":"","sources":["../../../src/components/VTooltip/VTooltip.ts"],"sourcesContent":["import './VTooltip.sass'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Colorable from '../../mixins/colorable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Menuable from '../../mixins/menuable'\n\n// Helpers\nimport { convertToUnit, keyCodes, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Colorable, Delayable, Dependent, Menuable).extend({\n  name: 'v-tooltip',\n\n  props: {\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    disabled: Boolean,\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    openOnHover: {\n      type: Boolean,\n      default: true,\n    },\n    openOnFocus: {\n      type: Boolean,\n      default: true,\n    },\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    transition: String,\n  },\n\n  data: () => ({\n    calculatedMinWidth: 0,\n    closeDependents: false,\n  }),\n\n  computed: {\n    calculatedLeft (): string {\n      const { activator, content } = this.dimensions\n      const unknown = !this.bottom && !this.left && !this.top && !this.right\n      const activatorLeft = this.attach !== false ? activator.offsetLeft : activator.left\n      let left = 0\n\n      if (this.top || this.bottom || unknown) {\n        left = (\n          activatorLeft +\n          (activator.width / 2) -\n          (content.width / 2)\n        )\n      } else if (this.left || this.right) {\n        left = (\n          activatorLeft +\n          (this.right ? activator.width : -content.width) +\n          (this.right ? 10 : -10)\n        )\n      }\n\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return `${this.calcXOverflow(left, this.dimensions.content.width)}px`\n    },\n    calculatedTop (): string {\n      const { activator, content } = this.dimensions\n      const activatorTop = this.attach !== false ? activator.offsetTop : activator.top\n      let top = 0\n\n      if (this.top || this.bottom) {\n        top = (\n          activatorTop +\n          (this.bottom ? activator.height : -content.height) +\n          (this.bottom ? 10 : -10)\n        )\n      } else if (this.left || this.right) {\n        top = (\n          activatorTop +\n          (activator.height / 2) -\n          (content.height / 2)\n        )\n      }\n\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n      if (this.attach === false) top += this.pageYOffset\n\n      return `${this.calcYOverflow(top)}px`\n    },\n    classes (): object {\n      return {\n        'v-tooltip--top': this.top,\n        'v-tooltip--right': this.right,\n        'v-tooltip--bottom': this.bottom,\n        'v-tooltip--left': this.left,\n        'v-tooltip--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      }\n    },\n    computedTransition (): string {\n      if (this.transition) return this.transition\n\n      return this.isActive ? 'scale-transition' : 'fade-transition'\n    },\n    offsetY (): boolean {\n      return this.top || this.bottom\n    },\n    offsetX (): boolean {\n      return this.left || this.right\n    },\n    styles (): object {\n      return {\n        left: this.calculatedLeft,\n        maxWidth: convertToUnit(this.maxWidth),\n        minWidth: convertToUnit(this.minWidth),\n        top: this.calculatedTop,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.value && this.callActivate()\n    })\n  },\n\n  mounted () {\n    if (getSlotType(this, 'activator', true) === 'v-slot') {\n      consoleError(`v-tooltip's activator slot must be bound, try '<template #activator=\"data\"><v-btn v-on=\"data.on>'`, this)\n    }\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(this.startTransition)\n    },\n    deactivate () {\n      this.runDelay('close')\n    },\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: Event) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.blur = (e: Event) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      }\n\n      listeners.keydown = (e: KeyboardEvent) => {\n        if (e.keyCode === keyCodes.esc) {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      }\n\n      return listeners\n    },\n    genActivatorAttributes () {\n      return {\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genTransition () {\n      const content = this.genContent()\n\n      if (!this.computedTransition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.computedTransition,\n        },\n      }, [content])\n    },\n    genContent () {\n      return this.$createElement(\n        'div',\n        this.setBackgroundColor(this.color, {\n          staticClass: 'v-tooltip__content',\n          class: {\n            [this.contentClass]: true,\n            menuable__content__active: this.isActive,\n            'v-tooltip__content--fixed': this.activatorFixed,\n          },\n          style: this.styles,\n          attrs: this.getScopeIdAttrs(),\n          directives: [{\n            name: 'show',\n            value: this.isContentActive,\n          }],\n          ref: 'content',\n        }),\n        this.getContentSlot()\n      )\n    },\n  },\n\n  render (h): VNode {\n    return h(this.tag, {\n      staticClass: 'v-tooltip',\n      class: this.classes,\n    }, [\n      this.showLazyContent(() => [this.genTransition()]),\n      this.genActivator(),\n    ])\n  },\n})\n"]},"metadata":{},"sourceType":"module"}