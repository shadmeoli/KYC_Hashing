{"ast":null,"code":"// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable';\nimport Routable from '../../mixins/routable';\nimport Themeable from '../../mixins/themeable'; // Utilities\n\nimport { keyCodes } from './../../util/helpers';\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(Routable, // Must be after routable\n// to overwrite activeClass\nGroupableFactory('tabsBar'), Themeable);\nexport default baseMixins.extend().extend().extend({\n  name: 'v-tab',\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true\n    }\n  },\n  data: () => ({\n    proxyClass: 'v-tab--active'\n  }),\n  computed: {\n    classes() {\n      return {\n        'v-tab': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-tab--disabled': this.disabled,\n        ...this.groupClasses\n      };\n    },\n\n    value() {\n      let to = this.to || this.href;\n      if (to == null) return to;\n\n      if (this.$router && this.to === Object(this.to)) {\n        const resolve = this.$router.resolve(this.to, this.$route, this.append);\n        to = resolve.href;\n      }\n\n      return to.replace('#', '');\n    }\n\n  },\n  methods: {\n    click(e) {\n      // Prevent keyboard actions\n      // from children elements\n      // within disabled tabs\n      if (this.disabled) {\n        e.preventDefault();\n        return;\n      } // If user provides an\n      // actual link, do not\n      // prevent default\n\n\n      if (this.href && this.href.indexOf('#') > -1) e.preventDefault();\n      if (e.detail) this.$el.blur();\n      this.$emit('click', e);\n      this.to || this.toggle();\n    },\n\n    toggle() {\n      // VItemGroup treats a change event as a click\n      if (!this.isActive || !this.tabsBar.mandatory && !this.to) {\n        this.$emit('change');\n      }\n    }\n\n  },\n\n  render(h) {\n    const {\n      tag,\n      data\n    } = this.generateRouteLink();\n    data.attrs = { ...data.attrs,\n      'aria-selected': String(this.isActive),\n      role: 'tab',\n      tabindex: this.disabled ? -1 : 0\n    };\n    data.on = { ...data.on,\n      keydown: e => {\n        if (e.keyCode === keyCodes.enter) this.click(e);\n        this.$emit('keydown', e);\n      }\n    };\n    return h(tag, data, this.$slots.default);\n  }\n\n});","map":{"version":3,"mappings":"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","names":["factory","GroupableFactory","Routable","Themeable","keyCodes","mixins","baseMixins","extend","name","props","ripple","type","Boolean","Object","default","data","proxyClass","computed","classes","options","call","disabled","groupClasses","value","to","href","$router","resolve","$route","append","replace","methods","click","e","preventDefault","indexOf","detail","$el","blur","$emit","toggle","isActive","tabsBar","mandatory","render","h","tag","generateRouteLink","attrs","String","role","tabindex","on","keydown","keyCode","enter","$slots"],"sourceRoot":"","sources":["../../../src/components/VTabs/VTab.ts"],"sourcesContent":["// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Routable from '../../mixins/routable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport { keyCodes } from './../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { ExtractVue } from './../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\n// Components\nimport VTabsBar from '../VTabs/VTabsBar'\n\nconst baseMixins = mixins(\n  Routable,\n  // Must be after routable\n  // to overwrite activeClass\n  GroupableFactory('tabsBar'),\n  Themeable\n)\n\ntype VTabBarInstance = InstanceType<typeof VTabsBar>\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  tabsBar: VTabBarInstance\n}\n\nexport default baseMixins.extend<options>().extend(\n  /* @vue/component */\n).extend({\n  name: 'v-tab',\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  data: () => ({\n    proxyClass: 'v-tab--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-tab': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-tab--disabled': this.disabled,\n        ...this.groupClasses,\n      }\n    },\n    value (): any {\n      let to = this.to || this.href\n\n      if (to == null) return to\n\n      if (this.$router &&\n        this.to === Object(this.to)\n      ) {\n        const resolve = this.$router.resolve(\n          this.to,\n          this.$route,\n          this.append\n        )\n\n        to = resolve.href\n      }\n\n      return to.replace('#', '')\n    },\n  },\n\n  methods: {\n    click (e: KeyboardEvent | MouseEvent): void {\n      // Prevent keyboard actions\n      // from children elements\n      // within disabled tabs\n      if (this.disabled) {\n        e.preventDefault()\n        return\n      }\n\n      // If user provides an\n      // actual link, do not\n      // prevent default\n      if (this.href &&\n        this.href.indexOf('#') > -1\n      ) e.preventDefault()\n\n      if (e.detail) this.$el.blur()\n\n      this.$emit('click', e)\n\n      this.to || this.toggle()\n    },\n    toggle () {\n      // VItemGroup treats a change event as a click\n      if (!this.isActive || (!this.tabsBar.mandatory && !this.to)) {\n        this.$emit('change')\n      }\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      'aria-selected': String(this.isActive),\n      role: 'tab',\n      tabindex: this.disabled ? -1 : 0,\n    }\n    data.on = {\n      ...data.on,\n      keydown: (e: KeyboardEvent) => {\n        if (e.keyCode === keyCodes.enter) this.click(e)\n\n        this.$emit('keydown', e)\n      },\n    }\n\n    return h(tag, data, this.$slots.default)\n  },\n})\n"]},"metadata":{},"sourceType":"module"}