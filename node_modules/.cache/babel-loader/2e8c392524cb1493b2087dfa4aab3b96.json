{"ast":null,"code":"import _objectSpread from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.string.fixed.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.number.constructor.js\";\n// Styles\nimport \"../../../src/components/VAppBar/VAppBar.sass\"; // Extensions\n\nimport VToolbar from '../VToolbar/VToolbar'; // Directives\n\nimport Scroll from '../../directives/scroll'; // Mixins\n\nimport Applicationable from '../../mixins/applicationable';\nimport Scrollable from '../../mixins/scrollable';\nimport SSRBootable from '../../mixins/ssr-bootable';\nimport Toggleable from '../../mixins/toggleable'; // Utilities\n\nimport { convertToUnit } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nvar baseMixins = mixins(VToolbar, Scrollable, SSRBootable, Toggleable, Applicationable('top', ['clippedLeft', 'clippedRight', 'computedHeight', 'invertedScroll', 'isExtended', 'isProminent', 'value']));\n/* @vue/component */\n\nexport default baseMixins.extend({\n  name: 'v-app-bar',\n  directives: {\n    Scroll: Scroll\n  },\n  provide: function provide() {\n    return {\n      VAppBar: this\n    };\n  },\n  props: {\n    clippedLeft: Boolean,\n    clippedRight: Boolean,\n    collapseOnScroll: Boolean,\n    elevateOnScroll: Boolean,\n    fadeImgOnScroll: Boolean,\n    hideOnScroll: Boolean,\n    invertedScroll: Boolean,\n    scrollOffScreen: Boolean,\n    shrinkOnScroll: Boolean,\n    value: {\n      type: Boolean,\n      \"default\": true\n    }\n  },\n  data: function data() {\n    return {\n      isActive: this.value\n    };\n  },\n  computed: {\n    applicationProperty: function applicationProperty() {\n      return !this.bottom ? 'top' : 'bottom';\n    },\n    canScroll: function canScroll() {\n      return Scrollable.options.computed.canScroll.call(this) && (this.invertedScroll || this.elevateOnScroll || this.hideOnScroll || this.collapseOnScroll || this.isBooted || // If falsy, user has provided an\n      // explicit value which should\n      // overwrite anything we do\n      !this.value);\n    },\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, VToolbar.options.computed.classes.call(this)), {}, {\n        'v-toolbar--collapse': this.collapse || this.collapseOnScroll,\n        'v-app-bar': true,\n        'v-app-bar--clipped': this.clippedLeft || this.clippedRight,\n        'v-app-bar--fade-img-on-scroll': this.fadeImgOnScroll,\n        'v-app-bar--elevate-on-scroll': this.elevateOnScroll,\n        'v-app-bar--fixed': !this.absolute && (this.app || this.fixed),\n        'v-app-bar--hide-shadow': this.hideShadow,\n        'v-app-bar--is-scrolled': this.currentScroll > 0,\n        'v-app-bar--shrink-on-scroll': this.shrinkOnScroll\n      });\n    },\n    scrollRatio: function scrollRatio() {\n      var threshold = this.computedScrollThreshold;\n      return Math.max((threshold - this.currentScroll) / threshold, 0);\n    },\n    computedContentHeight: function computedContentHeight() {\n      if (!this.shrinkOnScroll) return VToolbar.options.computed.computedContentHeight.call(this);\n      var min = this.dense ? 48 : 56;\n      var max = this.computedOriginalHeight;\n      return min + (max - min) * this.scrollRatio;\n    },\n    computedFontSize: function computedFontSize() {\n      if (!this.isProminent) return undefined;\n      var min = 1.25;\n      var max = 1.5;\n      return min + (max - min) * this.scrollRatio;\n    },\n    computedLeft: function computedLeft() {\n      if (!this.app || this.clippedLeft) return 0;\n      return this.$vuetify.application.left;\n    },\n    computedMarginTop: function computedMarginTop() {\n      if (!this.app) return 0;\n      return this.$vuetify.application.bar;\n    },\n    computedOpacity: function computedOpacity() {\n      if (!this.fadeImgOnScroll) return undefined;\n      return this.scrollRatio;\n    },\n    computedOriginalHeight: function computedOriginalHeight() {\n      var height = VToolbar.options.computed.computedContentHeight.call(this);\n      if (this.isExtended) height += parseInt(this.extensionHeight);\n      return height;\n    },\n    computedRight: function computedRight() {\n      if (!this.app || this.clippedRight) return 0;\n      return this.$vuetify.application.right;\n    },\n    computedScrollThreshold: function computedScrollThreshold() {\n      if (this.scrollThreshold) return Number(this.scrollThreshold);\n      return this.computedOriginalHeight - (this.dense ? 48 : 56);\n    },\n    computedTransform: function computedTransform() {\n      if (!this.canScroll || this.elevateOnScroll && this.currentScroll === 0 && this.isActive) return 0;\n      if (this.isActive) return 0;\n      var scrollOffScreen = this.scrollOffScreen ? this.computedHeight : this.computedContentHeight;\n      return this.bottom ? scrollOffScreen : -scrollOffScreen;\n    },\n    hideShadow: function hideShadow() {\n      if (this.elevateOnScroll && this.isExtended) {\n        return this.currentScroll < this.computedScrollThreshold;\n      }\n\n      if (this.elevateOnScroll) {\n        return this.currentScroll === 0 || this.computedTransform < 0;\n      }\n\n      return (!this.isExtended || this.scrollOffScreen) && this.computedTransform !== 0;\n    },\n    isCollapsed: function isCollapsed() {\n      if (!this.collapseOnScroll) {\n        return VToolbar.options.computed.isCollapsed.call(this);\n      }\n\n      return this.currentScroll > 0;\n    },\n    isProminent: function isProminent() {\n      return VToolbar.options.computed.isProminent.call(this) || this.shrinkOnScroll;\n    },\n    styles: function styles() {\n      return _objectSpread(_objectSpread({}, VToolbar.options.computed.styles.call(this)), {}, {\n        fontSize: convertToUnit(this.computedFontSize, 'rem'),\n        marginTop: convertToUnit(this.computedMarginTop),\n        transform: \"translateY(\".concat(convertToUnit(this.computedTransform), \")\"),\n        left: convertToUnit(this.computedLeft),\n        right: convertToUnit(this.computedRight)\n      });\n    }\n  },\n  watch: {\n    canScroll: 'onScroll',\n    computedTransform: function computedTransform() {\n      // Normally we do not want the v-app-bar\n      // to update the application top value\n      // to avoid screen jump. However, in\n      // this situation, we must so that\n      // the clipped drawer can update\n      // its top value when scrolled\n      if (!this.canScroll || !this.clippedLeft && !this.clippedRight) return;\n      this.callUpdate();\n    },\n    invertedScroll: function invertedScroll(val) {\n      this.isActive = !val || this.currentScroll !== 0;\n    },\n    hideOnScroll: function hideOnScroll(val) {\n      this.isActive = !val || this.currentScroll < this.computedScrollThreshold;\n    }\n  },\n  created: function created() {\n    if (this.invertedScroll) this.isActive = false;\n  },\n  methods: {\n    genBackground: function genBackground() {\n      var render = VToolbar.options.methods.genBackground.call(this);\n      render.data = this._b(render.data || {}, render.tag, {\n        style: {\n          opacity: this.computedOpacity\n        }\n      });\n      return render;\n    },\n    updateApplication: function updateApplication() {\n      return this.invertedScroll ? 0 : this.computedHeight + this.computedTransform;\n    },\n    thresholdMet: function thresholdMet() {\n      if (this.invertedScroll) {\n        this.isActive = this.currentScroll > this.computedScrollThreshold;\n        return;\n      }\n\n      if (this.hideOnScroll) {\n        this.isActive = this.isScrollingUp || this.currentScroll < this.computedScrollThreshold;\n      }\n\n      if (this.currentThreshold < this.computedScrollThreshold) return;\n      this.savedScroll = this.currentScroll;\n    }\n  },\n  render: function render(h) {\n    var render = VToolbar.options.render.call(this, h);\n    render.data = render.data || {};\n\n    if (this.canScroll) {\n      render.data.directives = render.data.directives || [];\n      render.data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll\n      });\n    }\n\n    return render;\n  }\n});","map":{"version":3,"mappings":"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","names":["VToolbar","Scroll","Applicationable","Scrollable","SSRBootable","Toggleable","convertToUnit","mixins","baseMixins","extend","name","directives","provide","VAppBar","props","clippedLeft","Boolean","clippedRight","collapseOnScroll","elevateOnScroll","fadeImgOnScroll","hideOnScroll","invertedScroll","scrollOffScreen","shrinkOnScroll","value","type","data","isActive","computed","applicationProperty","bottom","canScroll","options","call","isBooted","classes","collapse","absolute","app","fixed","hideShadow","currentScroll","scrollRatio","threshold","computedScrollThreshold","Math","max","computedContentHeight","min","dense","computedOriginalHeight","computedFontSize","isProminent","undefined","computedLeft","$vuetify","application","left","computedMarginTop","bar","computedOpacity","height","isExtended","parseInt","extensionHeight","computedRight","right","scrollThreshold","Number","computedTransform","computedHeight","isCollapsed","styles","fontSize","marginTop","transform","watch","callUpdate","val","created","methods","genBackground","render","_b","tag","style","opacity","updateApplication","thresholdMet","isScrollingUp","currentThreshold","savedScroll","h","push","arg","scrollTarget","onScroll"],"sourceRoot":"","sources":["../../../src/components/VAppBar/VAppBar.ts"],"sourcesContent":["// Styles\nimport './VAppBar.sass'\n\n// Extensions\nimport VToolbar from '../VToolbar/VToolbar'\n\n// Directives\nimport Scroll from '../../directives/scroll'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport Scrollable from '../../mixins/scrollable'\nimport SSRBootable from '../../mixins/ssr-bootable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  VToolbar,\n  Scrollable,\n  SSRBootable,\n  Toggleable,\n  Applicationable('top', [\n    'clippedLeft',\n    'clippedRight',\n    'computedHeight',\n    'invertedScroll',\n    'isExtended',\n    'isProminent',\n    'value',\n  ])\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-app-bar',\n\n  directives: { Scroll },\n\n  provide (): object {\n    return { VAppBar: this }\n  },\n\n  props: {\n    clippedLeft: Boolean,\n    clippedRight: Boolean,\n    collapseOnScroll: Boolean,\n    elevateOnScroll: Boolean,\n    fadeImgOnScroll: Boolean,\n    hideOnScroll: Boolean,\n    invertedScroll: Boolean,\n    scrollOffScreen: Boolean,\n    shrinkOnScroll: Boolean,\n    value: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data () {\n    return {\n      isActive: this.value,\n    }\n  },\n\n  computed: {\n    applicationProperty (): string {\n      return !this.bottom ? 'top' : 'bottom'\n    },\n    canScroll (): boolean {\n      return (\n        Scrollable.options.computed.canScroll.call(this) &&\n        (\n          this.invertedScroll ||\n          this.elevateOnScroll ||\n          this.hideOnScroll ||\n          this.collapseOnScroll ||\n          this.isBooted ||\n          // If falsy, user has provided an\n          // explicit value which should\n          // overwrite anything we do\n          !this.value\n        )\n      )\n    },\n    classes (): object {\n      return {\n        ...VToolbar.options.computed.classes.call(this),\n        'v-toolbar--collapse': this.collapse || this.collapseOnScroll,\n        'v-app-bar': true,\n        'v-app-bar--clipped': this.clippedLeft || this.clippedRight,\n        'v-app-bar--fade-img-on-scroll': this.fadeImgOnScroll,\n        'v-app-bar--elevate-on-scroll': this.elevateOnScroll,\n        'v-app-bar--fixed': !this.absolute && (this.app || this.fixed),\n        'v-app-bar--hide-shadow': this.hideShadow,\n        'v-app-bar--is-scrolled': this.currentScroll > 0,\n        'v-app-bar--shrink-on-scroll': this.shrinkOnScroll,\n      }\n    },\n    scrollRatio (): number {\n      const threshold = this.computedScrollThreshold\n      return Math.max((threshold - this.currentScroll) / threshold, 0)\n    },\n    computedContentHeight (): number {\n      if (!this.shrinkOnScroll) return VToolbar.options.computed.computedContentHeight.call(this)\n\n      const min = this.dense ? 48 : 56\n      const max = this.computedOriginalHeight\n\n      return min + (max - min) * this.scrollRatio\n    },\n    computedFontSize (): number | undefined {\n      if (!this.isProminent) return undefined\n\n      const min = 1.25\n      const max = 1.5\n\n      return min + (max - min) * this.scrollRatio\n    },\n    computedLeft (): number {\n      if (!this.app || this.clippedLeft) return 0\n\n      return this.$vuetify.application.left\n    },\n    computedMarginTop (): number {\n      if (!this.app) return 0\n\n      return this.$vuetify.application.bar\n    },\n    computedOpacity (): number | undefined {\n      if (!this.fadeImgOnScroll) return undefined\n\n      return this.scrollRatio\n    },\n    computedOriginalHeight (): number {\n      let height = VToolbar.options.computed.computedContentHeight.call(this)\n      if (this.isExtended) height += parseInt(this.extensionHeight)\n      return height\n    },\n    computedRight (): number {\n      if (!this.app || this.clippedRight) return 0\n\n      return this.$vuetify.application.right\n    },\n    computedScrollThreshold (): number {\n      if (this.scrollThreshold) return Number(this.scrollThreshold)\n\n      return this.computedOriginalHeight - (this.dense ? 48 : 56)\n    },\n    computedTransform (): number {\n      if (\n        !this.canScroll ||\n        (this.elevateOnScroll && this.currentScroll === 0 && this.isActive)\n      ) return 0\n\n      if (this.isActive) return 0\n\n      const scrollOffScreen = this.scrollOffScreen\n        ? this.computedHeight\n        : this.computedContentHeight\n\n      return this.bottom ? scrollOffScreen : -scrollOffScreen\n    },\n    hideShadow (): boolean {\n      if (this.elevateOnScroll && this.isExtended) {\n        return this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.elevateOnScroll) {\n        return this.currentScroll === 0 ||\n          this.computedTransform < 0\n      }\n\n      return (\n        !this.isExtended ||\n        this.scrollOffScreen\n      ) && this.computedTransform !== 0\n    },\n    isCollapsed (): boolean {\n      if (!this.collapseOnScroll) {\n        return VToolbar.options.computed.isCollapsed.call(this)\n      }\n\n      return this.currentScroll > 0\n    },\n    isProminent (): boolean {\n      return (\n        VToolbar.options.computed.isProminent.call(this) ||\n        this.shrinkOnScroll\n      )\n    },\n    styles (): object {\n      return {\n        ...VToolbar.options.computed.styles.call(this),\n        fontSize: convertToUnit(this.computedFontSize, 'rem'),\n        marginTop: convertToUnit(this.computedMarginTop),\n        transform: `translateY(${convertToUnit(this.computedTransform)})`,\n        left: convertToUnit(this.computedLeft),\n        right: convertToUnit(this.computedRight),\n      }\n    },\n  },\n\n  watch: {\n    canScroll: 'onScroll',\n    computedTransform () {\n      // Normally we do not want the v-app-bar\n      // to update the application top value\n      // to avoid screen jump. However, in\n      // this situation, we must so that\n      // the clipped drawer can update\n      // its top value when scrolled\n      if (\n        !this.canScroll ||\n        (!this.clippedLeft && !this.clippedRight)\n      ) return\n\n      this.callUpdate()\n    },\n    invertedScroll (val: boolean) {\n      this.isActive = !val || this.currentScroll !== 0\n    },\n    hideOnScroll (val: boolean) {\n      this.isActive = !val || this.currentScroll < this.computedScrollThreshold\n    },\n  },\n\n  created () {\n    if (this.invertedScroll) this.isActive = false\n  },\n\n  methods: {\n    genBackground () {\n      const render = VToolbar.options.methods.genBackground.call(this)\n\n      render.data = this._b(render.data || {}, render.tag!, {\n        style: { opacity: this.computedOpacity },\n      })\n\n      return render\n    },\n    updateApplication (): number {\n      return this.invertedScroll\n        ? 0\n        : this.computedHeight + this.computedTransform\n    },\n    thresholdMet () {\n      if (this.invertedScroll) {\n        this.isActive = this.currentScroll > this.computedScrollThreshold\n        return\n      }\n\n      if (this.hideOnScroll) {\n        this.isActive = this.isScrollingUp ||\n          this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.currentThreshold < this.computedScrollThreshold) return\n\n      this.savedScroll = this.currentScroll\n    },\n  },\n\n  render (h): VNode {\n    const render = VToolbar.options.render.call(this, h)\n\n    render.data = render.data || {}\n\n    if (this.canScroll) {\n      render.data.directives = render.data.directives || []\n      render.data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll,\n      })\n    }\n\n    return render\n  },\n})\n"]},"metadata":{},"sourceType":"module"}