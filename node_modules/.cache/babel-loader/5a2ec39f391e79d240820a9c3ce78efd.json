{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'; // Mixins\n\nimport Themeable from '../../mixins/themeable';\nimport SSRBootable from '../../mixins/ssr-bootable'; // Utilities\n\nimport mixins from '../../util/mixins';\nexport default mixins(BaseSlideGroup, SSRBootable, Themeable\n/* @vue/component */\n).extend({\n  name: 'v-tabs-bar',\n  provide: function provide() {\n    return {\n      tabsBar: this\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, BaseSlideGroup.options.computed.classes.call(this)), {}, {\n        'v-tabs-bar': true,\n        'v-tabs-bar--is-mobile': this.isMobile,\n        // TODO: Remove this and move to v-slide-group\n        'v-tabs-bar--show-arrows': this.showArrows\n      }, this.themeClasses);\n    }\n  },\n  watch: {\n    items: 'callSlider',\n    internalValue: 'callSlider',\n    $route: 'onRouteChange'\n  },\n  methods: {\n    callSlider: function callSlider() {\n      if (!this.isBooted) return;\n      this.$emit('call:slider');\n    },\n    genContent: function genContent() {\n      var render = BaseSlideGroup.options.methods.genContent.call(this);\n      render.data = render.data || {};\n      render.data.staticClass += ' v-tabs-bar__content';\n      return render;\n    },\n    onRouteChange: function onRouteChange(val, oldVal) {\n      /* istanbul ignore next */\n      if (this.mandatory) return;\n      var items = this.items;\n      var newPath = val.path;\n      var oldPath = oldVal.path;\n      var hasNew = false;\n      var hasOld = false;\n\n      var _iterator = _createForOfIteratorHelper(items),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          if (item.to === oldPath) hasOld = true;else if (item.to === newPath) hasNew = true;\n          if (hasNew && hasOld) break;\n        } // If we have an old item and not a new one\n        // it's assumed that the user navigated to\n        // a path that is not present in the items\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (!hasNew && hasOld) this.internalValue = undefined;\n    }\n  },\n  render: function render(h) {\n    var render = BaseSlideGroup.options.render.call(this, h);\n    render.data.attrs = {\n      role: 'tablist'\n    };\n    return render;\n  }\n});","map":{"version":3,"mappings":";;AAAA;AACA,SAASA,cAAT,QAA+B,4BAA/B,C,CAKA;;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAQA,eAAeA,MAAM,CACnBH,cADmB,EAEnBE,WAFmB,EAGnBD;AACA;AAJmB,CAAN,CAKbG,MALa,CAKN;EACPC,IAAI,EAAE,YADC;EAGPC,OAHO,qBAGA;IACL,OAAO;MACLC,OAAO,EAAE;IADJ,CAAP;EAJK;EASPC,QAAQ,EAAE;IACRC,OADQ,qBACD;MACL,uCACKT,cAAc,CAACU,OAAf,CAAuBF,QAAvB,CAAgCC,OAAhC,CAAwCE,IAAxC,CAA6C,IAA7C,CADL;QAEE,cAAc,IAFhB;QAGE,yBAAyB,KAAKC,QAHhC;QAIE;QACA,2BAA2B,KAAKC;MALlC,GAMK,KAAKC,YANV;IAQD;EAVO,CATH;EAsBPC,KAAK,EAAE;IACLC,KAAK,EAAE,YADF;IAELC,aAAa,EAAE,YAFV;IAGLC,MAAM,EAAE;EAHH,CAtBA;EA4BPC,OAAO,EAAE;IACPC,UADO,wBACG;MACR,IAAI,CAAC,KAAKC,QAAV,EAAoB;MAEpB,KAAKC,KAAL,CAAW,aAAX;IAJK;IAMPC,UANO,wBAMG;MACR,IAAMC,MAAM,GAAGxB,cAAc,CAACU,OAAf,CAAuBS,OAAvB,CAA+BI,UAA/B,CAA0CZ,IAA1C,CAA+C,IAA/C,CAAf;MAEAa,MAAM,CAACC,IAAP,GAAcD,MAAM,CAACC,IAAP,IAAe,EAA7B;MACAD,MAAM,CAACC,IAAP,CAAYC,WAAZ,IAA2B,sBAA3B;MAEA,OAAOF,MAAP;IAZK;IAcPG,aAdO,yBAcQC,GAdR,EAcoBC,MAdpB,EAciC;MACtC;MACA,IAAI,KAAKC,SAAT,EAAoB;MAEpB,IAAMd,KAAK,GAAG,KAAKA,KAAnB;MACA,IAAMe,OAAO,GAAGH,GAAG,CAACI,IAApB;MACA,IAAMC,OAAO,GAAGJ,MAAM,CAACG,IAAvB;MAEA,IAAIE,MAAM,GAAG,KAAb;MACA,IAAIC,MAAM,GAAG,KAAb;;MATsC,2CAWnBnB,KAXmB;MAAA;;MAAA;QAWtC,oDAA0B;UAAA,IAAfoB,IAAe;UACxB,IAAIA,IAAI,CAACC,EAAL,KAAYJ,OAAhB,EAAyBE,MAAM,GAAG,IAAT,CAAzB,KACK,IAAIC,IAAI,CAACC,EAAL,KAAYN,OAAhB,EAAyBG,MAAM,GAAG,IAAT;UAE9B,IAAIA,MAAM,IAAIC,MAAd,EAAsB;QAfc,EAkBtC;QACA;QACA;;MApBsC;QAAA;MAAA;QAAA;MAAA;;MAqBtC,IAAI,CAACD,MAAD,IAAWC,MAAf,EAAuB,KAAKlB,aAAL,GAAqBqB,SAArB;IACxB;EApCM,CA5BF;EAmEPd,MAnEO,kBAmECe,CAnED,EAmEE;IACP,IAAMf,MAAM,GAAGxB,cAAc,CAACU,OAAf,CAAuBc,MAAvB,CAA8Bb,IAA9B,CAAmC,IAAnC,EAAyC4B,CAAzC,CAAf;IAEAf,MAAM,CAACC,IAAP,CAAae,KAAb,GAAqB;MACnBC,IAAI,EAAE;IADa,CAArB;IAIA,OAAOjB,MAAP;EACD;AA3EM,CALM,CAAf","names":["BaseSlideGroup","Themeable","SSRBootable","mixins","extend","name","provide","tabsBar","computed","classes","options","call","isMobile","showArrows","themeClasses","watch","items","internalValue","$route","methods","callSlider","isBooted","$emit","genContent","render","data","staticClass","onRouteChange","val","oldVal","mandatory","newPath","path","oldPath","hasNew","hasOld","item","to","undefined","h","attrs","role"],"sourceRoot":"","sources":["../../../src/components/VTabs/VTabsBar.ts"],"sourcesContent":["// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'\n\n// Components\nimport VTab from './VTab'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport SSRBootable from '../../mixins/ssr-bootable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { Route } from 'vue-router'\nimport { VNode } from 'vue'\n\ntype VTabInstance = InstanceType<typeof VTab>\n\nexport default mixins(\n  BaseSlideGroup,\n  SSRBootable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-tabs-bar',\n\n  provide () {\n    return {\n      tabsBar: this,\n    }\n  },\n\n  computed: {\n    classes () {\n      return {\n        ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-tabs-bar': true,\n        'v-tabs-bar--is-mobile': this.isMobile,\n        // TODO: Remove this and move to v-slide-group\n        'v-tabs-bar--show-arrows': this.showArrows,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  watch: {\n    items: 'callSlider',\n    internalValue: 'callSlider',\n    $route: 'onRouteChange',\n  },\n\n  methods: {\n    callSlider () {\n      if (!this.isBooted) return\n\n      this.$emit('call:slider')\n    },\n    genContent () {\n      const render = BaseSlideGroup.options.methods.genContent.call(this)\n\n      render.data = render.data || {}\n      render.data.staticClass += ' v-tabs-bar__content'\n\n      return render\n    },\n    onRouteChange (val: Route, oldVal: Route) {\n      /* istanbul ignore next */\n      if (this.mandatory) return\n\n      const items = this.items as unknown as VTabInstance[]\n      const newPath = val.path\n      const oldPath = oldVal.path\n\n      let hasNew = false\n      let hasOld = false\n\n      for (const item of items) {\n        if (item.to === oldPath) hasOld = true\n        else if (item.to === newPath) hasNew = true\n\n        if (hasNew && hasOld) break\n      }\n\n      // If we have an old item and not a new one\n      // it's assumed that the user navigated to\n      // a path that is not present in the items\n      if (!hasNew && hasOld) this.internalValue = undefined\n    },\n  },\n\n  render (h): VNode {\n    const render = BaseSlideGroup.options.render.call(this, h)\n\n    render.data!.attrs = {\n      role: 'tablist',\n    }\n\n    return render\n  },\n})\n"]},"metadata":{},"sourceType":"module"}