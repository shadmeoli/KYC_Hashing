{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n// Components\nimport VIcon from '../VIcon'; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport { inject as RegistrableInject } from '../../mixins/registrable'; // Directives\n\nimport ripple from '../../directives/ripple'; // Utilities\n\nimport mixins from '../../util/mixins';\nimport { keyCodes } from '../../util/helpers';\nvar baseMixins = mixins(Colorable, RegistrableInject('stepper', 'v-stepper-step', 'v-stepper'));\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-stepper-step',\n  directives: {\n    ripple: ripple\n  },\n  inject: ['stepClick'],\n  props: {\n    color: {\n      type: String,\n      \"default\": 'primary'\n    },\n    complete: Boolean,\n    completeIcon: {\n      type: String,\n      \"default\": '$complete'\n    },\n    editable: Boolean,\n    editIcon: {\n      type: String,\n      \"default\": '$edit'\n    },\n    errorIcon: {\n      type: String,\n      \"default\": '$error'\n    },\n    rules: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    step: [Number, String]\n  },\n  data: function data() {\n    return {\n      isActive: false,\n      isInactive: true\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return {\n        'v-stepper__step--active': this.isActive,\n        'v-stepper__step--editable': this.editable,\n        'v-stepper__step--inactive': this.isInactive,\n        'v-stepper__step--error error--text': this.hasError,\n        'v-stepper__step--complete': this.complete\n      };\n    },\n    hasError: function hasError() {\n      return this.rules.some(function (validate) {\n        return validate() !== true;\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.stepper && this.stepper.register(this);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.stepper && this.stepper.unregister(this);\n  },\n  methods: {\n    click: function click(e) {\n      e.stopPropagation();\n      this.$emit('click', e);\n\n      if (this.editable) {\n        this.stepClick(this.step);\n      }\n    },\n    genIcon: function genIcon(icon) {\n      return this.$createElement(VIcon, icon);\n    },\n    genLabel: function genLabel() {\n      return this.$createElement('div', {\n        staticClass: 'v-stepper__label'\n      }, this.$slots[\"default\"]);\n    },\n    genStep: function genStep() {\n      var color = !this.hasError && (this.complete || this.isActive) ? this.color : false;\n      return this.$createElement('span', this.setBackgroundColor(color, {\n        staticClass: 'v-stepper__step__step'\n      }), this.genStepContent());\n    },\n    genStepContent: function genStepContent() {\n      var children = [];\n\n      if (this.hasError) {\n        children.push(this.genIcon(this.errorIcon));\n      } else if (this.complete) {\n        if (this.editable) {\n          children.push(this.genIcon(this.editIcon));\n        } else {\n          children.push(this.genIcon(this.completeIcon));\n        }\n      } else {\n        children.push(String(this.step));\n      }\n\n      return children;\n    },\n    keyboardClick: function keyboardClick(e) {\n      if (e.keyCode === keyCodes.space) {\n        this.click(e);\n      }\n    },\n    toggle: function toggle(step) {\n      this.isActive = step.toString() === this.step.toString();\n      this.isInactive = Number(step) < Number(this.step);\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      attrs: {\n        tabindex: this.editable ? 0 : -1\n      },\n      staticClass: 'v-stepper__step',\n      \"class\": this.classes,\n      directives: [{\n        name: 'ripple',\n        value: this.editable\n      }],\n      on: {\n        click: this.click,\n        keydown: this.keyboardClick\n      }\n    }, [this.genStep(), this.genLabel()]);\n  }\n});","map":{"version":3,"mappings":"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","names":["VIcon","Colorable","inject","RegistrableInject","ripple","mixins","keyCodes","baseMixins","extend","name","directives","props","color","type","String","complete","Boolean","completeIcon","editable","editIcon","errorIcon","rules","Array","step","Number","data","isActive","isInactive","computed","classes","hasError","some","validate","mounted","stepper","register","beforeDestroy","unregister","methods","click","e","stopPropagation","$emit","stepClick","genIcon","icon","$createElement","genLabel","staticClass","$slots","genStep","setBackgroundColor","genStepContent","children","push","keyboardClick","keyCode","space","toggle","toString","render","h","attrs","tabindex","value","on","keydown"],"sourceRoot":"","sources":["../../../src/components/VStepper/VStepperStep.ts"],"sourcesContent":["// Components\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\ntype VuetifyStepperRuleValidator = () => string | boolean\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('stepper', 'v-stepper-step', 'v-stepper')\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  stepClick: (step: number | string) => void\n}\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-stepper-step',\n\n  directives: { ripple },\n\n  inject: ['stepClick'],\n\n  props: {\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    complete: Boolean,\n    completeIcon: {\n      type: String,\n      default: '$complete',\n    },\n    editable: Boolean,\n    editIcon: {\n      type: String,\n      default: '$edit',\n    },\n    errorIcon: {\n      type: String,\n      default: '$error',\n    },\n    rules: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<VuetifyStepperRuleValidator[]>,\n    step: [Number, String],\n  },\n\n  data () {\n    return {\n      isActive: false,\n      isInactive: true,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-stepper__step--active': this.isActive,\n        'v-stepper__step--editable': this.editable,\n        'v-stepper__step--inactive': this.isInactive,\n        'v-stepper__step--error error--text': this.hasError,\n        'v-stepper__step--complete': this.complete,\n      }\n    },\n    hasError (): boolean {\n      return this.rules.some(validate => validate() !== true)\n    },\n  },\n\n  mounted () {\n    this.stepper && this.stepper.register(this)\n  },\n\n  beforeDestroy () {\n    this.stepper && this.stepper.unregister(this)\n  },\n\n  methods: {\n    click (e: MouseEvent | KeyboardEvent) {\n      e.stopPropagation()\n\n      this.$emit('click', e)\n\n      if (this.editable) {\n        this.stepClick(this.step)\n      }\n    },\n    genIcon (icon: string) {\n      return this.$createElement(VIcon, icon)\n    },\n    genLabel () {\n      return this.$createElement('div', {\n        staticClass: 'v-stepper__label',\n      }, this.$slots.default)\n    },\n    genStep () {\n      const color = (!this.hasError && (this.complete || this.isActive)) ? this.color : false\n\n      return this.$createElement('span', this.setBackgroundColor(color, {\n        staticClass: 'v-stepper__step__step',\n      }), this.genStepContent())\n    },\n    genStepContent () {\n      const children = []\n\n      if (this.hasError) {\n        children.push(this.genIcon(this.errorIcon))\n      } else if (this.complete) {\n        if (this.editable) {\n          children.push(this.genIcon(this.editIcon))\n        } else {\n          children.push(this.genIcon(this.completeIcon))\n        }\n      } else {\n        children.push(String(this.step))\n      }\n\n      return children\n    },\n    keyboardClick (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.space) {\n        this.click(e)\n      }\n    },\n    toggle (step: number | string) {\n      this.isActive = step.toString() === this.step.toString()\n      this.isInactive = Number(step) < Number(this.step)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      attrs: {\n        tabindex: this.editable ? 0 : -1,\n      },\n      staticClass: 'v-stepper__step',\n      class: this.classes,\n      directives: [{\n        name: 'ripple',\n        value: this.editable,\n      }],\n      on: {\n        click: this.click,\n        keydown: this.keyboardClick,\n      },\n    }, [\n      this.genStep(),\n      this.genLabel(),\n    ])\n  },\n})\n"]},"metadata":{},"sourceType":"module"}