{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.flat.js\";\nimport \"core-js/modules/es.array.unscopables.flat.js\";\n// Components\nimport VPicker from '../../components/VPicker'; // Mixins\n\nimport Colorable from '../colorable';\nimport Elevatable from '../../mixins/elevatable';\nimport Themeable from '../themeable'; // Utils\n\nimport mixins from '../../util/mixins';\nexport default mixins(Colorable, Elevatable, Themeable\n/* @vue/component */\n).extend({\n  name: 'picker',\n  props: {\n    flat: Boolean,\n    fullWidth: Boolean,\n    headerColor: String,\n    landscape: Boolean,\n    noTitle: Boolean,\n    width: {\n      type: [Number, String],\n      \"default\": 290\n    }\n  },\n  methods: {\n    genPickerTitle: function genPickerTitle() {\n      return null;\n    },\n    genPickerBody: function genPickerBody() {\n      return null;\n    },\n    genPickerActionsSlot: function genPickerActionsSlot() {\n      return this.$scopedSlots[\"default\"] ? this.$scopedSlots[\"default\"]({\n        save: this.save,\n        cancel: this.cancel\n      }) : this.$slots[\"default\"];\n    },\n    genPicker: function genPicker(staticClass) {\n      var children = [];\n\n      if (!this.noTitle) {\n        var title = this.genPickerTitle();\n        title && children.push(title);\n      }\n\n      var body = this.genPickerBody();\n      body && children.push(body);\n      children.push(this.$createElement('template', {\n        slot: 'actions'\n      }, [this.genPickerActionsSlot()]));\n      return this.$createElement(VPicker, {\n        staticClass: staticClass,\n        props: {\n          color: this.headerColor || this.color,\n          dark: this.dark,\n          elevation: this.elevation,\n          flat: this.flat,\n          fullWidth: this.fullWidth,\n          landscape: this.landscape,\n          light: this.light,\n          width: this.width,\n          noTitle: this.noTitle\n        }\n      }, children);\n    }\n  }\n});","map":{"version":3,"mappings":";;;AAAA;AACA,OAAOA,OAAP,MAAoB,0BAApB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAKA,eAAeA,MAAM,CACnBH,SADmB,EAEnBC,UAFmB,EAGnBC;AACF;AAJqB,CAAN,CAKbE,MALa,CAKN;EACPC,IAAI,EAAE,QADC;EAGPC,KAAK,EAAE;IACLC,IAAI,EAAEC,OADD;IAELC,SAAS,EAAED,OAFN;IAGLE,WAAW,EAAEC,MAHR;IAILC,SAAS,EAAEJ,OAJN;IAKLK,OAAO,EAAEL,OALJ;IAMLM,KAAK,EAAE;MACLC,IAAI,EAAE,CAACC,MAAD,EAASL,MAAT,CADD;MAEL,WAAS;IAFJ;EANF,CAHA;EAePM,OAAO,EAAE;IACPC,cADO,4BACO;MACZ,OAAO,IAAP;IAFK;IAIPC,aAJO,2BAIM;MACX,OAAO,IAAP;IALK;IAOPC,oBAPO,kCAOa;MAClB,OAAO,KAAKC,YAAL,cAA4B,KAAKA,YAAL,YAA0B;QAC3DC,IAAI,EAAG,KAAaA,IADuC;QAE3DC,MAAM,EAAG,KAAaA;MAFqC,CAA1B,CAA5B,GAGF,KAAKC,MAAL,WAHL;IARK;IAaPC,SAbO,qBAaIC,WAbJ,EAauB;MAC5B,IAAMC,QAAQ,GAAY,EAA1B;;MAEA,IAAI,CAAC,KAAKd,OAAV,EAAmB;QACjB,IAAMe,KAAK,GAAG,KAAKV,cAAL,EAAd;QACAU,KAAK,IAAID,QAAQ,CAACE,IAAT,CAAcD,KAAd,CAAT;MACD;;MAED,IAAME,IAAI,GAAG,KAAKX,aAAL,EAAb;MACAW,IAAI,IAAIH,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAR;MAEAH,QAAQ,CAACE,IAAT,CAAc,KAAKE,cAAL,CAAoB,UAApB,EAAgC;QAAEC,IAAI,EAAE;MAAR,CAAhC,EAAqD,CAAC,KAAKZ,oBAAL,EAAD,CAArD,CAAd;MAEA,OAAO,KAAKW,cAAL,CAAoBhC,OAApB,EAA6B;QAClC2B,WADkC,EAClCA,WADkC;QAElCpB,KAAK,EAAE;UACL2B,KAAK,EAAE,KAAKvB,WAAL,IAAoB,KAAKuB,KAD3B;UAELC,IAAI,EAAE,KAAKA,IAFN;UAGLC,SAAS,EAAE,KAAKA,SAHX;UAIL5B,IAAI,EAAE,KAAKA,IAJN;UAKLE,SAAS,EAAE,KAAKA,SALX;UAMLG,SAAS,EAAE,KAAKA,SANX;UAOLwB,KAAK,EAAE,KAAKA,KAPP;UAQLtB,KAAK,EAAE,KAAKA,KARP;UASLD,OAAO,EAAE,KAAKA;QATT;MAF2B,CAA7B,EAaJc,QAbI,CAAP;IAcD;EAxCM;AAfF,CALM,CAAf","names":["VPicker","Colorable","Elevatable","Themeable","mixins","extend","name","props","flat","Boolean","fullWidth","headerColor","String","landscape","noTitle","width","type","Number","methods","genPickerTitle","genPickerBody","genPickerActionsSlot","$scopedSlots","save","cancel","$slots","genPicker","staticClass","children","title","push","body","$createElement","slot","color","dark","elevation","light"],"sourceRoot":"","sources":["../../../src/mixins/picker/index.ts"],"sourcesContent":["// Components\nimport VPicker from '../../components/VPicker'\n\n// Mixins\nimport Colorable from '../colorable'\nimport Elevatable from '../../mixins/elevatable'\nimport Themeable from '../themeable'\n\n// Utils\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Colorable,\n  Elevatable,\n  Themeable\n/* @vue/component */\n).extend({\n  name: 'picker',\n\n  props: {\n    flat: Boolean,\n    fullWidth: Boolean,\n    headerColor: String,\n    landscape: Boolean,\n    noTitle: Boolean,\n    width: {\n      type: [Number, String],\n      default: 290,\n    },\n  },\n\n  methods: {\n    genPickerTitle (): VNode | null {\n      return null\n    },\n    genPickerBody (): VNode | null {\n      return null\n    },\n    genPickerActionsSlot () {\n      return this.$scopedSlots.default ? this.$scopedSlots.default({\n        save: (this as any).save,\n        cancel: (this as any).cancel,\n      }) : this.$slots.default\n    },\n    genPicker (staticClass: string) {\n      const children: VNode[] = []\n\n      if (!this.noTitle) {\n        const title = this.genPickerTitle()\n        title && children.push(title)\n      }\n\n      const body = this.genPickerBody()\n      body && children.push(body)\n\n      children.push(this.$createElement('template', { slot: 'actions' }, [this.genPickerActionsSlot()]))\n\n      return this.$createElement(VPicker, {\n        staticClass,\n        props: {\n          color: this.headerColor || this.color,\n          dark: this.dark,\n          elevation: this.elevation,\n          flat: this.flat,\n          fullWidth: this.fullWidth,\n          landscape: this.landscape,\n          light: this.light,\n          width: this.width,\n          noTitle: this.noTitle,\n        },\n      }, children)\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"module"}