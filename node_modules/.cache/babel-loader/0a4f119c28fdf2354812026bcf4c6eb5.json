{"ast":null,"code":"import _typeof from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _objectSpread from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\n// Styles\n// import '../../stylus/components/_calendar-daily.styl'\n// Mixins\nimport CalendarWithEvents from './mixins/calendar-with-events'; // Util\n\nimport props from './util/props';\nimport { DAYS_IN_MONTH_MAX, DAY_MIN, DAYS_IN_WEEK, parseTimestamp as _parseTimestamp, validateTimestamp, relativeDays, nextDay, prevDay, copyTimestamp, updateFormatted, updateWeekday, updateRelative, getStartOfMonth, getEndOfMonth, timestampToDate as _timestampToDate } from './util/timestamp'; // Calendars\n\nimport VCalendarMonthly from './VCalendarMonthly';\nimport VCalendarDaily from './VCalendarDaily';\nimport VCalendarWeekly from './VCalendarWeekly';\nimport VCalendarCategory from './VCalendarCategory';\nimport { getParsedCategories } from './util/parser';\n/* @vue/component */\n\nexport default CalendarWithEvents.extend({\n  name: 'v-calendar',\n  props: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, props.calendar), props.weeks), props.intervals), props.category),\n  data: function data() {\n    return {\n      lastStart: null,\n      lastEnd: null\n    };\n  },\n  computed: {\n    parsedValue: function parsedValue() {\n      return validateTimestamp(this.value) ? _parseTimestamp(this.value, true) : this.parsedStart || this.times.today;\n    },\n    parsedCategoryDays: function parsedCategoryDays() {\n      return parseInt(this.categoryDays) || 1;\n    },\n    renderProps: function renderProps() {\n      var around = this.parsedValue;\n      var component = null;\n      var maxDays = this.maxDays;\n      var weekdays = this.parsedWeekdays;\n      var categories = this.parsedCategories;\n      var start = around;\n      var end = around;\n\n      switch (this.type) {\n        case 'month':\n          component = VCalendarMonthly;\n          start = getStartOfMonth(around);\n          end = getEndOfMonth(around);\n          break;\n\n        case 'week':\n          component = VCalendarDaily;\n          start = this.getStartOfWeek(around);\n          end = this.getEndOfWeek(around);\n          maxDays = 7;\n          break;\n\n        case 'day':\n          component = VCalendarDaily;\n          maxDays = 1;\n          weekdays = [start.weekday];\n          break;\n\n        case '4day':\n          component = VCalendarDaily;\n          end = relativeDays(copyTimestamp(end), nextDay, 3);\n          updateFormatted(end);\n          maxDays = 4;\n          weekdays = [start.weekday, (start.weekday + 1) % 7, (start.weekday + 2) % 7, (start.weekday + 3) % 7];\n          break;\n\n        case 'custom-weekly':\n          component = VCalendarWeekly;\n          start = this.parsedStart || around;\n          end = this.parsedEnd;\n          break;\n\n        case 'custom-daily':\n          component = VCalendarDaily;\n          start = this.parsedStart || around;\n          end = this.parsedEnd;\n          break;\n\n        case 'category':\n          var days = this.parsedCategoryDays;\n          component = VCalendarCategory;\n          end = relativeDays(copyTimestamp(end), nextDay, days);\n          updateFormatted(end);\n          maxDays = days;\n          weekdays = [];\n\n          for (var i = 0; i < days; i++) {\n            weekdays.push((start.weekday + i) % 7);\n          }\n\n          categories = this.getCategoryList(categories);\n          break;\n\n        default:\n          throw new Error(this.type + ' is not a valid Calendar type');\n      }\n\n      return {\n        component: component,\n        start: start,\n        end: end,\n        maxDays: maxDays,\n        weekdays: weekdays,\n        categories: categories\n      };\n    },\n    eventWeekdays: function eventWeekdays() {\n      return this.renderProps.weekdays;\n    },\n    categoryMode: function categoryMode() {\n      return this.type === 'category';\n    },\n    title: function title() {\n      var _this$renderProps = this.renderProps,\n          start = _this$renderProps.start,\n          end = _this$renderProps.end;\n      var spanYears = start.year !== end.year;\n      var spanMonths = spanYears || start.month !== end.month;\n\n      if (spanYears) {\n        return this.monthShortFormatter(start, true) + ' ' + start.year + ' - ' + this.monthShortFormatter(end, true) + ' ' + end.year;\n      }\n\n      if (spanMonths) {\n        return this.monthShortFormatter(start, true) + ' - ' + this.monthShortFormatter(end, true) + ' ' + end.year;\n      } else {\n        return this.monthLongFormatter(start, false) + ' ' + start.year;\n      }\n    },\n    monthLongFormatter: function monthLongFormatter() {\n      return this.getFormatter({\n        timeZone: 'UTC',\n        month: 'long'\n      });\n    },\n    monthShortFormatter: function monthShortFormatter() {\n      return this.getFormatter({\n        timeZone: 'UTC',\n        month: 'short'\n      });\n    },\n    parsedCategories: function parsedCategories() {\n      return getParsedCategories(this.categories, this.categoryText);\n    }\n  },\n  watch: {\n    renderProps: 'checkChange'\n  },\n  mounted: function mounted() {\n    this.updateEventVisibility();\n    this.checkChange();\n  },\n  updated: function updated() {\n    window.requestAnimationFrame(this.updateEventVisibility);\n  },\n  methods: {\n    checkChange: function checkChange() {\n      var lastStart = this.lastStart,\n          lastEnd = this.lastEnd;\n      var _this$renderProps2 = this.renderProps,\n          start = _this$renderProps2.start,\n          end = _this$renderProps2.end;\n\n      if (!lastStart || !lastEnd || start.date !== lastStart.date || end.date !== lastEnd.date) {\n        this.lastStart = start;\n        this.lastEnd = end;\n        this.$emit('change', {\n          start: start,\n          end: end\n        });\n      }\n    },\n    move: function move() {\n      var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var moved = copyTimestamp(this.parsedValue);\n      var forward = amount > 0;\n      var mover = forward ? nextDay : prevDay;\n      var limit = forward ? DAYS_IN_MONTH_MAX : DAY_MIN;\n      var times = forward ? amount : -amount;\n\n      while (--times >= 0) {\n        switch (this.type) {\n          case 'month':\n            moved.day = limit;\n            mover(moved);\n            break;\n\n          case 'week':\n            relativeDays(moved, mover, DAYS_IN_WEEK);\n            break;\n\n          case 'day':\n            relativeDays(moved, mover, 1);\n            break;\n\n          case '4day':\n            relativeDays(moved, mover, 4);\n            break;\n\n          case 'category':\n            relativeDays(moved, mover, this.parsedCategoryDays);\n            break;\n        }\n      }\n\n      updateWeekday(moved);\n      updateFormatted(moved);\n      updateRelative(moved, this.times.now);\n\n      if (this.value instanceof Date) {\n        this.$emit('input', _timestampToDate(moved));\n      } else if (typeof this.value === 'number') {\n        this.$emit('input', _timestampToDate(moved).getTime());\n      } else {\n        this.$emit('input', moved.date);\n      }\n\n      this.$emit('moved', moved);\n    },\n    next: function next() {\n      var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      this.move(amount);\n    },\n    prev: function prev() {\n      var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      this.move(-amount);\n    },\n    timeToY: function timeToY(time) {\n      var clamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var c = this.$children[0];\n\n      if (c && c.timeToY) {\n        return c.timeToY(time, clamp);\n      } else {\n        return false;\n      }\n    },\n    timeDelta: function timeDelta(time) {\n      var c = this.$children[0];\n\n      if (c && c.timeDelta) {\n        return c.timeDelta(time);\n      } else {\n        return false;\n      }\n    },\n    minutesToPixels: function minutesToPixels(minutes) {\n      var c = this.$children[0];\n\n      if (c && c.minutesToPixels) {\n        return c.minutesToPixels(minutes);\n      } else {\n        return -1;\n      }\n    },\n    scrollToTime: function scrollToTime(time) {\n      var c = this.$children[0];\n\n      if (c && c.scrollToTime) {\n        return c.scrollToTime(time);\n      } else {\n        return false;\n      }\n    },\n    parseTimestamp: function parseTimestamp(input, required) {\n      return _parseTimestamp(input, required, this.times.now);\n    },\n    timestampToDate: function timestampToDate(timestamp) {\n      return _timestampToDate(timestamp);\n    },\n    getCategoryList: function getCategoryList(categories) {\n      var _this = this;\n\n      if (!this.noEvents) {\n        var categoryMap = categories.reduce(function (map, category, index) {\n          if (_typeof(category) === 'object' && category.categoryName) map[category.categoryName] = {\n            index: index,\n            count: 0\n          };else if (typeof category === 'string') map[category] = {\n            index: index,\n            count: 0\n          };\n          return map;\n        }, {});\n\n        if (!this.categoryHideDynamic || !this.categoryShowAll) {\n          var categoryLength = categories.length;\n          this.parsedEvents.forEach(function (ev) {\n            var category = ev.category;\n\n            if (typeof category !== 'string') {\n              category = _this.categoryForInvalid;\n            }\n\n            if (!category) {\n              return;\n            }\n\n            if (category in categoryMap) {\n              categoryMap[category].count++;\n            } else if (!_this.categoryHideDynamic) {\n              categoryMap[category] = {\n                index: categoryLength++,\n                count: 1\n              };\n            }\n          });\n        }\n\n        if (!this.categoryShowAll) {\n          for (var category in categoryMap) {\n            if (categoryMap[category].count === 0) {\n              delete categoryMap[category];\n            }\n          }\n        }\n\n        categories = categories.filter(function (category) {\n          if (_typeof(category) === 'object' && category.categoryName) {\n            return categoryMap.hasOwnProperty(category.categoryName);\n          } else if (typeof category === 'string') {\n            return categoryMap.hasOwnProperty(category);\n          }\n\n          return false;\n        });\n      }\n\n      return categories;\n    }\n  },\n  render: function render(h) {\n    var _this2 = this;\n\n    var _this$renderProps3 = this.renderProps,\n        start = _this$renderProps3.start,\n        end = _this$renderProps3.end,\n        maxDays = _this$renderProps3.maxDays,\n        component = _this$renderProps3.component,\n        weekdays = _this$renderProps3.weekdays,\n        categories = _this$renderProps3.categories;\n    return h(component, {\n      staticClass: 'v-calendar',\n      \"class\": {\n        'v-calendar-events': !this.noEvents\n      },\n      props: _objectSpread(_objectSpread({}, this.$props), {}, {\n        start: start.date,\n        end: end.date,\n        maxDays: maxDays,\n        weekdays: weekdays,\n        categories: categories\n      }),\n      attrs: {\n        role: 'grid'\n      },\n      directives: [{\n        modifiers: {\n          quiet: true\n        },\n        name: 'resize',\n        value: this.updateEventVisibility\n      }],\n      on: _objectSpread(_objectSpread({}, this.$listeners), {}, {\n        'click:date': function clickDate(day, e) {\n          if (_this2.$listeners.input) {\n            _this2.$emit('input', day.date);\n          }\n\n          if (_this2.$listeners['click:date']) {\n            _this2.$emit('click:date', day, e);\n          }\n        }\n      }),\n      scopedSlots: this.getScopedSlots()\n    });\n  }\n});","map":{"version":3,"mappings":"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","names":["CalendarWithEvents","props","DAYS_IN_MONTH_MAX","DAY_MIN","DAYS_IN_WEEK","parseTimestamp","validateTimestamp","relativeDays","nextDay","prevDay","copyTimestamp","updateFormatted","updateWeekday","updateRelative","getStartOfMonth","getEndOfMonth","timestampToDate","VCalendarMonthly","VCalendarDaily","VCalendarWeekly","VCalendarCategory","getParsedCategories","extend","name","calendar","weeks","intervals","category","data","lastStart","lastEnd","computed","parsedValue","value","parsedStart","times","today","parsedCategoryDays","parseInt","categoryDays","renderProps","around","component","maxDays","weekdays","parsedWeekdays","categories","parsedCategories","start","end","type","getStartOfWeek","getEndOfWeek","weekday","parsedEnd","days","i","push","getCategoryList","Error","eventWeekdays","categoryMode","title","spanYears","year","spanMonths","month","monthShortFormatter","monthLongFormatter","getFormatter","timeZone","categoryText","watch","mounted","updateEventVisibility","checkChange","updated","window","requestAnimationFrame","methods","date","$emit","move","amount","moved","forward","mover","limit","day","now","Date","getTime","next","prev","timeToY","time","clamp","c","$children","timeDelta","minutesToPixels","minutes","scrollToTime","input","required","timestamp","noEvents","categoryMap","reduce","map","index","categoryName","count","categoryHideDynamic","categoryShowAll","categoryLength","length","parsedEvents","forEach","ev","categoryForInvalid","filter","hasOwnProperty","render","h","staticClass","$props","attrs","role","directives","modifiers","quiet","on","$listeners","e","scopedSlots","getScopedSlots"],"sourceRoot":"","sources":["../../../src/components/VCalendar/VCalendar.ts"],"sourcesContent":["// Styles\n// import '../../stylus/components/_calendar-daily.styl'\n\n// Types\nimport { VNode, Component } from 'vue'\n\n// Mixins\nimport CalendarWithEvents from './mixins/calendar-with-events'\n\n// Util\nimport props from './util/props'\nimport {\n  DAYS_IN_MONTH_MAX,\n  DAY_MIN,\n  DAYS_IN_WEEK,\n  parseTimestamp,\n  validateTimestamp,\n  relativeDays,\n  nextDay,\n  prevDay,\n  copyTimestamp,\n  updateFormatted,\n  updateWeekday,\n  updateRelative,\n  getStartOfMonth,\n  getEndOfMonth,\n  VTime,\n  VTimestampInput,\n  timestampToDate,\n} from './util/timestamp'\n\n// Calendars\nimport VCalendarMonthly from './VCalendarMonthly'\nimport VCalendarDaily from './VCalendarDaily'\nimport VCalendarWeekly from './VCalendarWeekly'\nimport VCalendarCategory from './VCalendarCategory'\nimport { CalendarTimestamp, CalendarFormatter, CalendarCategory } from 'vuetify/types'\nimport { getParsedCategories } from './util/parser'\n\n// Types\ninterface VCalendarRenderProps {\n  start: CalendarTimestamp\n  end: CalendarTimestamp\n  component: string | Component\n  maxDays: number\n  weekdays: number[]\n  categories: CalendarCategory[]\n}\n\n/* @vue/component */\nexport default CalendarWithEvents.extend({\n  name: 'v-calendar',\n\n  props: {\n    ...props.calendar,\n    ...props.weeks,\n    ...props.intervals,\n    ...props.category,\n  },\n\n  data: () => ({\n    lastStart: null as CalendarTimestamp | null,\n    lastEnd: null as CalendarTimestamp | null,\n  }),\n\n  computed: {\n    parsedValue (): CalendarTimestamp {\n      return (validateTimestamp(this.value)\n        ? parseTimestamp(this.value, true)\n        : (this.parsedStart || this.times.today))\n    },\n    parsedCategoryDays (): number {\n      return parseInt(this.categoryDays) || 1\n    },\n    renderProps (): VCalendarRenderProps {\n      const around = this.parsedValue\n      let component: any = null\n      let maxDays = this.maxDays\n      let weekdays = this.parsedWeekdays\n      let categories = this.parsedCategories\n      let start = around\n      let end = around\n      switch (this.type) {\n        case 'month':\n          component = VCalendarMonthly\n          start = getStartOfMonth(around)\n          end = getEndOfMonth(around)\n          break\n        case 'week':\n          component = VCalendarDaily\n          start = this.getStartOfWeek(around)\n          end = this.getEndOfWeek(around)\n          maxDays = 7\n          break\n        case 'day':\n          component = VCalendarDaily\n          maxDays = 1\n          weekdays = [start.weekday]\n          break\n        case '4day':\n          component = VCalendarDaily\n          end = relativeDays(copyTimestamp(end), nextDay, 3)\n          updateFormatted(end)\n          maxDays = 4\n          weekdays = [\n            start.weekday,\n            (start.weekday + 1) % 7,\n            (start.weekday + 2) % 7,\n            (start.weekday + 3) % 7,\n          ]\n          break\n        case 'custom-weekly':\n          component = VCalendarWeekly\n          start = this.parsedStart || around\n          end = this.parsedEnd\n          break\n        case 'custom-daily':\n          component = VCalendarDaily\n          start = this.parsedStart || around\n          end = this.parsedEnd\n          break\n        case 'category':\n          const days = this.parsedCategoryDays\n\n          component = VCalendarCategory\n          end = relativeDays(copyTimestamp(end), nextDay, days)\n          updateFormatted(end)\n          maxDays = days\n          weekdays = []\n\n          for (let i = 0; i < days; i++) {\n            weekdays.push((start.weekday + i) % 7)\n          }\n\n          categories = this.getCategoryList(categories)\n          break\n        default:\n          throw new Error(this.type + ' is not a valid Calendar type')\n      }\n\n      return { component, start, end, maxDays, weekdays, categories }\n    },\n    eventWeekdays (): number[] {\n      return this.renderProps.weekdays\n    },\n    categoryMode (): boolean {\n      return this.type === 'category'\n    },\n    title (): string {\n      const { start, end } = this.renderProps\n      const spanYears = start.year !== end.year\n      const spanMonths = spanYears || start.month !== end.month\n\n      if (spanYears) {\n        return this.monthShortFormatter(start, true) + ' ' + start.year + ' - ' + this.monthShortFormatter(end, true) + ' ' + end.year\n      }\n\n      if (spanMonths) {\n        return this.monthShortFormatter(start, true) + ' - ' + this.monthShortFormatter(end, true) + ' ' + end.year\n      } else {\n        return this.monthLongFormatter(start, false) + ' ' + start.year\n      }\n    },\n    monthLongFormatter (): CalendarFormatter {\n      return this.getFormatter({\n        timeZone: 'UTC', month: 'long',\n      })\n    },\n    monthShortFormatter (): CalendarFormatter {\n      return this.getFormatter({\n        timeZone: 'UTC', month: 'short',\n      })\n    },\n    parsedCategories (): CalendarCategory[] {\n      return getParsedCategories(this.categories, this.categoryText)\n    },\n  },\n\n  watch: {\n    renderProps: 'checkChange',\n  },\n\n  mounted () {\n    this.updateEventVisibility()\n    this.checkChange()\n  },\n\n  updated () {\n    window.requestAnimationFrame(this.updateEventVisibility)\n  },\n\n  methods: {\n    checkChange (): void {\n      const { lastStart, lastEnd } = this\n      const { start, end } = this.renderProps\n      if (!lastStart || !lastEnd ||\n        start.date !== lastStart.date ||\n        end.date !== lastEnd.date) {\n        this.lastStart = start\n        this.lastEnd = end\n        this.$emit('change', { start, end })\n      }\n    },\n    move (amount = 1): void {\n      const moved = copyTimestamp(this.parsedValue)\n      const forward = amount > 0\n      const mover = forward ? nextDay : prevDay\n      const limit = forward ? DAYS_IN_MONTH_MAX : DAY_MIN\n      let times = forward ? amount : -amount\n\n      while (--times >= 0) {\n        switch (this.type) {\n          case 'month':\n            moved.day = limit\n            mover(moved)\n            break\n          case 'week':\n            relativeDays(moved, mover, DAYS_IN_WEEK)\n            break\n          case 'day':\n            relativeDays(moved, mover, 1)\n            break\n          case '4day':\n            relativeDays(moved, mover, 4)\n            break\n          case 'category':\n            relativeDays(moved, mover, this.parsedCategoryDays)\n            break\n        }\n      }\n\n      updateWeekday(moved)\n      updateFormatted(moved)\n      updateRelative(moved, this.times.now)\n\n      if (this.value instanceof Date) {\n        this.$emit('input', timestampToDate(moved))\n      } else if (typeof this.value === 'number') {\n        this.$emit('input', timestampToDate(moved).getTime())\n      } else {\n        this.$emit('input', moved.date)\n      }\n\n      this.$emit('moved', moved)\n    },\n    next (amount = 1): void {\n      this.move(amount)\n    },\n    prev (amount = 1): void {\n      this.move(-amount)\n    },\n    timeToY (time: VTime, clamp = true): number | false {\n      const c = this.$children[0] as any\n\n      if (c && c.timeToY) {\n        return c.timeToY(time, clamp)\n      } else {\n        return false\n      }\n    },\n    timeDelta (time: VTime): number | false {\n      const c = this.$children[0] as any\n\n      if (c && c.timeDelta) {\n        return c.timeDelta(time)\n      } else {\n        return false\n      }\n    },\n    minutesToPixels (minutes: number): number {\n      const c = this.$children[0] as any\n\n      if (c && c.minutesToPixels) {\n        return c.minutesToPixels(minutes)\n      } else {\n        return -1\n      }\n    },\n    scrollToTime (time: VTime): boolean {\n      const c = this.$children[0] as any\n\n      if (c && c.scrollToTime) {\n        return c.scrollToTime(time)\n      } else {\n        return false\n      }\n    },\n    parseTimestamp (input: VTimestampInput, required?: false): CalendarTimestamp | null {\n      return parseTimestamp(input, required, this.times.now)\n    },\n    timestampToDate (timestamp: CalendarTimestamp): Date {\n      return timestampToDate(timestamp)\n    },\n    getCategoryList (categories: CalendarCategory[]): CalendarCategory[] {\n      if (!this.noEvents) {\n        const categoryMap: any = categories.reduce((map: any, category, index) => {\n          if (typeof category === 'object' && category.categoryName) map[category.categoryName] = { index, count: 0 }\n          else if (typeof category === 'string') map[category] = { index, count: 0 }\n          return map\n        }, {})\n\n        if (!this.categoryHideDynamic || !this.categoryShowAll) {\n          let categoryLength = categories.length\n\n          this.parsedEvents.forEach(ev => {\n            let category = ev.category\n\n            if (typeof category !== 'string') {\n              category = this.categoryForInvalid\n            }\n\n            if (!category) {\n              return\n            }\n\n            if (category in categoryMap) {\n              categoryMap[category].count++\n            } else if (!this.categoryHideDynamic) {\n              categoryMap[category] = {\n                index: categoryLength++,\n                count: 1,\n              }\n            }\n          })\n        }\n\n        if (!this.categoryShowAll) {\n          for (const category in categoryMap) {\n            if (categoryMap[category].count === 0) {\n              delete categoryMap[category]\n            }\n          }\n        }\n\n        categories = categories.filter((category: CalendarCategory) => {\n          if (typeof category === 'object' && category.categoryName) {\n            return categoryMap.hasOwnProperty(category.categoryName)\n          } else if (typeof category === 'string') {\n            return categoryMap.hasOwnProperty(category)\n          }\n          return false\n        })\n      }\n      return categories\n    },\n  },\n\n  render (h): VNode {\n    const { start, end, maxDays, component, weekdays, categories } = this.renderProps\n\n    return h(component, {\n      staticClass: 'v-calendar',\n      class: {\n        'v-calendar-events': !this.noEvents,\n      },\n      props: {\n        ...this.$props,\n        start: start.date,\n        end: end.date,\n        maxDays,\n        weekdays,\n        categories,\n      },\n      attrs: {\n        role: 'grid',\n      },\n      directives: [{\n        modifiers: { quiet: true },\n        name: 'resize',\n        value: this.updateEventVisibility,\n      }],\n      on: {\n        ...this.$listeners,\n\n        'click:date': (day: CalendarTimestamp, e?: MouseEvent) => {\n          if (this.$listeners.input) {\n            this.$emit('input', day.date)\n          }\n          if (this.$listeners['click:date']) {\n            this.$emit('click:date', day, e)\n          }\n        },\n      },\n      scopedSlots: this.getScopedSlots(),\n    })\n  },\n})\n"]},"metadata":{},"sourceType":"module"}