{"ast":null,"code":"import _objectSpread from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.concat.js\";\n// Helpers\nimport { wrapInArray, sortItems, deepEqual, groupItems, searchItems, fillArray } from '../../util/helpers';\nimport Vue from 'vue';\nexport default Vue.extend({\n  name: 'v-data',\n  inheritAttrs: false,\n  props: {\n    items: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    options: {\n      type: Object,\n      \"default\": function _default() {\n        return {};\n      }\n    },\n    sortBy: {\n      type: [String, Array]\n    },\n    sortDesc: {\n      type: [Boolean, Array]\n    },\n    customSort: {\n      type: Function,\n      \"default\": sortItems\n    },\n    mustSort: Boolean,\n    multiSort: Boolean,\n    page: {\n      type: Number,\n      \"default\": 1\n    },\n    itemsPerPage: {\n      type: Number,\n      \"default\": 10\n    },\n    groupBy: {\n      type: [String, Array],\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    groupDesc: {\n      type: [Boolean, Array],\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    customGroup: {\n      type: Function,\n      \"default\": groupItems\n    },\n    locale: {\n      type: String,\n      \"default\": 'en-US'\n    },\n    disableSort: Boolean,\n    disablePagination: Boolean,\n    disableFiltering: Boolean,\n    search: String,\n    customFilter: {\n      type: Function,\n      \"default\": searchItems\n    },\n    serverItemsLength: {\n      type: Number,\n      \"default\": -1\n    }\n  },\n  data: function data() {\n    var internalOptions = {\n      page: this.page,\n      itemsPerPage: this.itemsPerPage,\n      sortBy: wrapInArray(this.sortBy),\n      sortDesc: wrapInArray(this.sortDesc),\n      groupBy: wrapInArray(this.groupBy),\n      groupDesc: wrapInArray(this.groupDesc),\n      mustSort: this.mustSort,\n      multiSort: this.multiSort\n    };\n\n    if (this.options) {\n      internalOptions = Object.assign(internalOptions, this.options);\n    }\n\n    var _internalOptions = internalOptions,\n        sortBy = _internalOptions.sortBy,\n        sortDesc = _internalOptions.sortDesc,\n        groupBy = _internalOptions.groupBy,\n        groupDesc = _internalOptions.groupDesc;\n    var sortDiff = sortBy.length - sortDesc.length;\n    var groupDiff = groupBy.length - groupDesc.length;\n\n    if (sortDiff > 0) {\n      var _internalOptions$sort;\n\n      (_internalOptions$sort = internalOptions.sortDesc).push.apply(_internalOptions$sort, _toConsumableArray(fillArray(sortDiff, false)));\n    }\n\n    if (groupDiff > 0) {\n      var _internalOptions$grou;\n\n      (_internalOptions$grou = internalOptions.groupDesc).push.apply(_internalOptions$grou, _toConsumableArray(fillArray(groupDiff, false)));\n    }\n\n    return {\n      internalOptions: internalOptions\n    };\n  },\n  computed: {\n    itemsLength: function itemsLength() {\n      return this.serverItemsLength >= 0 ? this.serverItemsLength : this.filteredItems.length;\n    },\n    pageCount: function pageCount() {\n      return this.internalOptions.itemsPerPage <= 0 ? 1 : Math.ceil(this.itemsLength / this.internalOptions.itemsPerPage);\n    },\n    pageStart: function pageStart() {\n      if (this.internalOptions.itemsPerPage === -1 || !this.items.length) return 0;\n      return (this.internalOptions.page - 1) * this.internalOptions.itemsPerPage;\n    },\n    pageStop: function pageStop() {\n      if (this.internalOptions.itemsPerPage === -1) return this.itemsLength;\n      if (!this.items.length) return 0;\n      return Math.min(this.itemsLength, this.internalOptions.page * this.internalOptions.itemsPerPage);\n    },\n    isGrouped: function isGrouped() {\n      return !!this.internalOptions.groupBy.length;\n    },\n    pagination: function pagination() {\n      return {\n        page: this.internalOptions.page,\n        itemsPerPage: this.internalOptions.itemsPerPage,\n        pageStart: this.pageStart,\n        pageStop: this.pageStop,\n        pageCount: this.pageCount,\n        itemsLength: this.itemsLength\n      };\n    },\n    filteredItems: function filteredItems() {\n      var items = this.items.slice();\n\n      if (!this.disableFiltering && this.serverItemsLength <= 0) {\n        items = this.customFilter(items, this.search);\n      }\n\n      return items;\n    },\n    computedItems: function computedItems() {\n      var items = this.filteredItems.slice();\n\n      if ((!this.disableSort || this.internalOptions.groupBy.length) && this.serverItemsLength <= 0) {\n        items = this.sortItems(items);\n      }\n\n      if (!this.disablePagination && this.serverItemsLength <= 0) {\n        items = this.paginateItems(items);\n      }\n\n      return items;\n    },\n    groupedItems: function groupedItems() {\n      return this.isGrouped ? this.groupItems(this.computedItems) : null;\n    },\n    scopedProps: function scopedProps() {\n      return {\n        sort: this.sort,\n        sortArray: this.sortArray,\n        group: this.group,\n        items: this.computedItems,\n        options: this.internalOptions,\n        updateOptions: this.updateOptions,\n        pagination: this.pagination,\n        groupedItems: this.groupedItems,\n        originalItemsLength: this.items.length\n      };\n    },\n    computedOptions: function computedOptions() {\n      return _objectSpread({}, this.options);\n    }\n  },\n  watch: {\n    computedOptions: {\n      handler: function handler(options, old) {\n        if (deepEqual(options, old)) return;\n        this.updateOptions(options);\n      },\n      deep: true,\n      immediate: true\n    },\n    internalOptions: {\n      handler: function handler(options, old) {\n        if (deepEqual(options, old)) return;\n        this.$emit('update:options', options);\n      },\n      deep: true,\n      immediate: true\n    },\n    page: function page(_page) {\n      this.updateOptions({\n        page: _page\n      });\n    },\n    'internalOptions.page': function internalOptionsPage(page) {\n      this.$emit('update:page', page);\n    },\n    itemsPerPage: function itemsPerPage(_itemsPerPage) {\n      this.updateOptions({\n        itemsPerPage: _itemsPerPage\n      });\n    },\n    'internalOptions.itemsPerPage': function internalOptionsItemsPerPage(itemsPerPage) {\n      this.$emit('update:items-per-page', itemsPerPage);\n    },\n    sortBy: function sortBy(_sortBy) {\n      this.updateOptions({\n        sortBy: wrapInArray(_sortBy)\n      });\n    },\n    'internalOptions.sortBy': function internalOptionsSortBy(sortBy, old) {\n      !deepEqual(sortBy, old) && this.$emit('update:sort-by', Array.isArray(this.sortBy) ? sortBy : sortBy[0]);\n    },\n    sortDesc: function sortDesc(_sortDesc) {\n      this.updateOptions({\n        sortDesc: wrapInArray(_sortDesc)\n      });\n    },\n    'internalOptions.sortDesc': function internalOptionsSortDesc(sortDesc, old) {\n      !deepEqual(sortDesc, old) && this.$emit('update:sort-desc', Array.isArray(this.sortDesc) ? sortDesc : sortDesc[0]);\n    },\n    groupBy: function groupBy(_groupBy) {\n      this.updateOptions({\n        groupBy: wrapInArray(_groupBy)\n      });\n    },\n    'internalOptions.groupBy': function internalOptionsGroupBy(groupBy, old) {\n      !deepEqual(groupBy, old) && this.$emit('update:group-by', Array.isArray(this.groupBy) ? groupBy : groupBy[0]);\n    },\n    groupDesc: function groupDesc(_groupDesc) {\n      this.updateOptions({\n        groupDesc: wrapInArray(_groupDesc)\n      });\n    },\n    'internalOptions.groupDesc': function internalOptionsGroupDesc(groupDesc, old) {\n      !deepEqual(groupDesc, old) && this.$emit('update:group-desc', Array.isArray(this.groupDesc) ? groupDesc : groupDesc[0]);\n    },\n    multiSort: function multiSort(_multiSort) {\n      this.updateOptions({\n        multiSort: _multiSort\n      });\n    },\n    'internalOptions.multiSort': function internalOptionsMultiSort(multiSort) {\n      this.$emit('update:multi-sort', multiSort);\n    },\n    mustSort: function mustSort(_mustSort) {\n      this.updateOptions({\n        mustSort: _mustSort\n      });\n    },\n    'internalOptions.mustSort': function internalOptionsMustSort(mustSort) {\n      this.$emit('update:must-sort', mustSort);\n    },\n    pageCount: {\n      handler: function handler(pageCount) {\n        this.$emit('page-count', pageCount);\n      },\n      immediate: true\n    },\n    computedItems: {\n      handler: function handler(computedItems) {\n        this.$emit('current-items', computedItems);\n      },\n      immediate: true\n    },\n    pagination: {\n      handler: function handler(pagination, old) {\n        if (deepEqual(pagination, old)) return;\n        this.$emit('pagination', this.pagination);\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    toggle: function toggle(key, oldBy, oldDesc, page, mustSort, multiSort) {\n      var by = oldBy.slice();\n      var desc = oldDesc.slice();\n      var byIndex = by.findIndex(function (k) {\n        return k === key;\n      });\n\n      if (byIndex < 0) {\n        if (!multiSort) {\n          by = [];\n          desc = [];\n        }\n\n        by.push(key);\n        desc.push(false);\n      } else if (byIndex >= 0 && !desc[byIndex]) {\n        desc[byIndex] = true;\n      } else if (!mustSort) {\n        by.splice(byIndex, 1);\n        desc.splice(byIndex, 1);\n      } else {\n        desc[byIndex] = false;\n      } // Reset page to 1 if sortBy or sortDesc have changed\n\n\n      if (!deepEqual(by, oldBy) || !deepEqual(desc, oldDesc)) {\n        page = 1;\n      }\n\n      return {\n        by: by,\n        desc: desc,\n        page: page\n      };\n    },\n    group: function group(key) {\n      var _this$toggle = this.toggle(key, this.internalOptions.groupBy, this.internalOptions.groupDesc, this.internalOptions.page, true, false),\n          groupBy = _this$toggle.by,\n          groupDesc = _this$toggle.desc,\n          page = _this$toggle.page;\n\n      this.updateOptions({\n        groupBy: groupBy,\n        groupDesc: groupDesc,\n        page: page\n      });\n    },\n    sort: function sort(key) {\n      if (Array.isArray(key)) return this.sortArray(key);\n\n      var _this$toggle2 = this.toggle(key, this.internalOptions.sortBy, this.internalOptions.sortDesc, this.internalOptions.page, this.internalOptions.mustSort, this.internalOptions.multiSort),\n          sortBy = _this$toggle2.by,\n          sortDesc = _this$toggle2.desc,\n          page = _this$toggle2.page;\n\n      this.updateOptions({\n        sortBy: sortBy,\n        sortDesc: sortDesc,\n        page: page\n      });\n    },\n    sortArray: function sortArray(sortBy) {\n      var _this = this;\n\n      var sortDesc = sortBy.map(function (s) {\n        var i = _this.internalOptions.sortBy.findIndex(function (k) {\n          return k === s;\n        });\n\n        return i > -1 ? _this.internalOptions.sortDesc[i] : false;\n      });\n      this.updateOptions({\n        sortBy: sortBy,\n        sortDesc: sortDesc\n      });\n    },\n    updateOptions: function updateOptions(options) {\n      this.internalOptions = _objectSpread(_objectSpread(_objectSpread({}, this.internalOptions), options), {}, {\n        page: this.serverItemsLength < 0 ? Math.max(1, Math.min(options.page || this.internalOptions.page, this.pageCount)) : options.page || this.internalOptions.page\n      });\n    },\n    sortItems: function sortItems(items) {\n      var sortBy = [];\n      var sortDesc = [];\n\n      if (!this.disableSort) {\n        sortBy = this.internalOptions.sortBy;\n        sortDesc = this.internalOptions.sortDesc;\n      }\n\n      if (this.internalOptions.groupBy.length) {\n        sortBy = [].concat(_toConsumableArray(this.internalOptions.groupBy), _toConsumableArray(sortBy));\n        sortDesc = [].concat(_toConsumableArray(this.internalOptions.groupDesc), _toConsumableArray(sortDesc));\n      }\n\n      return this.customSort(items, sortBy, sortDesc, this.locale);\n    },\n    groupItems: function groupItems(items) {\n      return this.customGroup(items, this.internalOptions.groupBy, this.internalOptions.groupDesc);\n    },\n    paginateItems: function paginateItems(items) {\n      // Make sure we don't try to display non-existant page if items suddenly change\n      // TODO: Could possibly move this to pageStart/pageStop?\n      if (this.serverItemsLength === -1 && items.length <= this.pageStart) {\n        this.internalOptions.page = Math.max(1, Math.ceil(items.length / this.internalOptions.itemsPerPage)) || 1; // Prevent NaN\n      }\n\n      return items.slice(this.pageStart, this.pageStop);\n    }\n  },\n  render: function render() {\n    return this.$scopedSlots[\"default\"] && this.$scopedSlots[\"default\"](this.scopedProps);\n  }\n});","map":{"version":3,"mappings":"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","names":["wrapInArray","sortItems","deepEqual","groupItems","searchItems","fillArray","Vue","extend","name","inheritAttrs","props","items","type","Array","options","Object","sortBy","String","sortDesc","Boolean","customSort","Function","mustSort","multiSort","page","Number","itemsPerPage","groupBy","groupDesc","customGroup","locale","disableSort","disablePagination","disableFiltering","search","customFilter","serverItemsLength","data","internalOptions","assign","sortDiff","length","groupDiff","push","computed","itemsLength","filteredItems","pageCount","Math","ceil","pageStart","pageStop","min","isGrouped","pagination","slice","computedItems","paginateItems","groupedItems","scopedProps","sort","sortArray","group","updateOptions","originalItemsLength","computedOptions","watch","handler","old","deep","immediate","$emit","isArray","methods","toggle","key","oldBy","oldDesc","by","desc","byIndex","findIndex","k","splice","map","i","s","max","render","$scopedSlots"],"sourceRoot":"","sources":["../../../src/components/VData/VData.ts"],"sourcesContent":["// Helpers\nimport { wrapInArray, sortItems, deepEqual, groupItems, searchItems, fillArray } from '../../util/helpers'\nimport Vue, { VNode } from 'vue'\n\n// Types\nimport {\n  DataOptions,\n  DataPagination,\n  DataScopeProps,\n  DataSortFunction,\n  DataGroupFunction,\n  DataSearchFunction,\n  ItemGroup,\n} from 'vuetify/types'\nimport { PropValidator } from 'vue/types/options'\n\nexport default Vue.extend({\n  name: 'v-data',\n\n  inheritAttrs: false,\n\n  props: {\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    options: {\n      type: Object,\n      default: () => ({}),\n    } as PropValidator<Partial<DataOptions>>,\n    sortBy: {\n      type: [String, Array],\n    } as PropValidator<string | string[] | undefined>,\n    sortDesc: {\n      type: [Boolean, Array],\n    } as PropValidator<boolean | boolean[] | undefined>,\n    customSort: {\n      type: Function,\n      default: sortItems,\n    } as PropValidator<DataSortFunction>,\n    mustSort: Boolean,\n    multiSort: Boolean,\n    page: {\n      type: Number,\n      default: 1,\n    },\n    itemsPerPage: {\n      type: Number,\n      default: 10,\n    },\n    groupBy: {\n      type: [String, Array],\n      default: () => [],\n    } as PropValidator<string | string[]>,\n    groupDesc: {\n      type: [Boolean, Array],\n      default: () => [],\n    } as PropValidator<boolean | boolean[]>,\n    customGroup: {\n      type: Function,\n      default: groupItems,\n    } as PropValidator<DataGroupFunction>,\n    locale: {\n      type: String,\n      default: 'en-US',\n    },\n    disableSort: Boolean,\n    disablePagination: Boolean,\n    disableFiltering: Boolean,\n    search: String,\n    customFilter: {\n      type: Function,\n      default: searchItems,\n    } as PropValidator<DataSearchFunction>,\n    serverItemsLength: {\n      type: Number,\n      default: -1,\n    },\n  },\n\n  data () {\n    let internalOptions: DataOptions = {\n      page: this.page,\n      itemsPerPage: this.itemsPerPage,\n      sortBy: wrapInArray(this.sortBy),\n      sortDesc: wrapInArray(this.sortDesc),\n      groupBy: wrapInArray(this.groupBy),\n      groupDesc: wrapInArray(this.groupDesc),\n      mustSort: this.mustSort,\n      multiSort: this.multiSort,\n    }\n\n    if (this.options) {\n      internalOptions = Object.assign(internalOptions, this.options)\n    }\n\n    const { sortBy, sortDesc, groupBy, groupDesc } = internalOptions\n    const sortDiff = sortBy.length - sortDesc.length\n    const groupDiff = groupBy.length - groupDesc.length\n\n    if (sortDiff > 0) {\n      internalOptions.sortDesc.push(...fillArray(sortDiff, false))\n    }\n\n    if (groupDiff > 0) {\n      internalOptions.groupDesc.push(...fillArray(groupDiff, false))\n    }\n\n    return {\n      internalOptions,\n    }\n  },\n\n  computed: {\n    itemsLength (): number {\n      return this.serverItemsLength >= 0 ? this.serverItemsLength : this.filteredItems.length\n    },\n    pageCount (): number {\n      return this.internalOptions.itemsPerPage <= 0\n        ? 1\n        : Math.ceil(this.itemsLength / this.internalOptions.itemsPerPage)\n    },\n    pageStart (): number {\n      if (this.internalOptions.itemsPerPage === -1 || !this.items.length) return 0\n\n      return (this.internalOptions.page - 1) * this.internalOptions.itemsPerPage\n    },\n    pageStop (): number {\n      if (this.internalOptions.itemsPerPage === -1) return this.itemsLength\n      if (!this.items.length) return 0\n\n      return Math.min(this.itemsLength, this.internalOptions.page * this.internalOptions.itemsPerPage)\n    },\n    isGrouped (): boolean {\n      return !!this.internalOptions.groupBy.length\n    },\n    pagination (): DataPagination {\n      return {\n        page: this.internalOptions.page,\n        itemsPerPage: this.internalOptions.itemsPerPage,\n        pageStart: this.pageStart,\n        pageStop: this.pageStop,\n        pageCount: this.pageCount,\n        itemsLength: this.itemsLength,\n      }\n    },\n    filteredItems (): any[] {\n      let items = this.items.slice()\n\n      if (!this.disableFiltering && this.serverItemsLength <= 0) {\n        items = this.customFilter(items, this.search)\n      }\n\n      return items\n    },\n    computedItems (): any[] {\n      let items = this.filteredItems.slice()\n\n      if ((!this.disableSort || this.internalOptions.groupBy.length) && this.serverItemsLength <= 0) {\n        items = this.sortItems(items)\n      }\n\n      if (!this.disablePagination && this.serverItemsLength <= 0) {\n        items = this.paginateItems(items)\n      }\n\n      return items\n    },\n    groupedItems (): ItemGroup<any>[] | null {\n      return this.isGrouped ? this.groupItems(this.computedItems) : null\n    },\n    scopedProps (): DataScopeProps {\n      return {\n        sort: this.sort,\n        sortArray: this.sortArray,\n        group: this.group,\n        items: this.computedItems,\n        options: this.internalOptions,\n        updateOptions: this.updateOptions,\n        pagination: this.pagination,\n        groupedItems: this.groupedItems,\n        originalItemsLength: this.items.length,\n      }\n    },\n    computedOptions (): DataOptions {\n      return { ...this.options } as DataOptions\n    },\n  },\n\n  watch: {\n    computedOptions: {\n      handler (options: DataOptions, old: DataOptions) {\n        if (deepEqual(options, old)) return\n\n        this.updateOptions(options)\n      },\n      deep: true,\n      immediate: true,\n    },\n    internalOptions: {\n      handler (options: DataOptions, old: DataOptions) {\n        if (deepEqual(options, old)) return\n        this.$emit('update:options', options)\n      },\n      deep: true,\n      immediate: true,\n    },\n    page (page: number) {\n      this.updateOptions({ page })\n    },\n    'internalOptions.page' (page: number) {\n      this.$emit('update:page', page)\n    },\n    itemsPerPage (itemsPerPage: number) {\n      this.updateOptions({ itemsPerPage })\n    },\n    'internalOptions.itemsPerPage' (itemsPerPage: number) {\n      this.$emit('update:items-per-page', itemsPerPage)\n    },\n    sortBy (sortBy: string | string[]) {\n      this.updateOptions({ sortBy: wrapInArray(sortBy) })\n    },\n    'internalOptions.sortBy' (sortBy: string[], old: string[]) {\n      !deepEqual(sortBy, old) && this.$emit('update:sort-by', Array.isArray(this.sortBy) ? sortBy : sortBy[0])\n    },\n    sortDesc (sortDesc: boolean | boolean[]) {\n      this.updateOptions({ sortDesc: wrapInArray(sortDesc) })\n    },\n    'internalOptions.sortDesc' (sortDesc: boolean[], old: boolean[]) {\n      !deepEqual(sortDesc, old) && this.$emit('update:sort-desc', Array.isArray(this.sortDesc) ? sortDesc : sortDesc[0])\n    },\n    groupBy (groupBy: string | string[]) {\n      this.updateOptions({ groupBy: wrapInArray(groupBy) })\n    },\n    'internalOptions.groupBy' (groupBy: string[], old: string[]) {\n      !deepEqual(groupBy, old) && this.$emit('update:group-by', Array.isArray(this.groupBy) ? groupBy : groupBy[0])\n    },\n    groupDesc (groupDesc: boolean | boolean[]) {\n      this.updateOptions({ groupDesc: wrapInArray(groupDesc) })\n    },\n    'internalOptions.groupDesc' (groupDesc: boolean[], old: boolean[]) {\n      !deepEqual(groupDesc, old) && this.$emit('update:group-desc', Array.isArray(this.groupDesc) ? groupDesc : groupDesc[0])\n    },\n    multiSort (multiSort: boolean) {\n      this.updateOptions({ multiSort })\n    },\n    'internalOptions.multiSort' (multiSort: boolean) {\n      this.$emit('update:multi-sort', multiSort)\n    },\n    mustSort (mustSort: boolean) {\n      this.updateOptions({ mustSort })\n    },\n    'internalOptions.mustSort' (mustSort: boolean) {\n      this.$emit('update:must-sort', mustSort)\n    },\n    pageCount: {\n      handler (pageCount: number) {\n        this.$emit('page-count', pageCount)\n      },\n      immediate: true,\n    },\n    computedItems: {\n      handler (computedItems: any[]) {\n        this.$emit('current-items', computedItems)\n      },\n      immediate: true,\n    },\n    pagination: {\n      handler (pagination: DataPagination, old: DataPagination) {\n        if (deepEqual(pagination, old)) return\n        this.$emit('pagination', this.pagination)\n      },\n      immediate: true,\n    },\n  },\n\n  methods: {\n    toggle (key: string, oldBy: string[], oldDesc: boolean[], page: number, mustSort: boolean, multiSort: boolean) {\n      let by = oldBy.slice()\n      let desc = oldDesc.slice()\n      const byIndex = by.findIndex((k: string) => k === key)\n\n      if (byIndex < 0) {\n        if (!multiSort) {\n          by = []\n          desc = []\n        }\n\n        by.push(key)\n        desc.push(false)\n      } else if (byIndex >= 0 && !desc[byIndex]) {\n        desc[byIndex] = true\n      } else if (!mustSort) {\n        by.splice(byIndex, 1)\n        desc.splice(byIndex, 1)\n      } else {\n        desc[byIndex] = false\n      }\n\n      // Reset page to 1 if sortBy or sortDesc have changed\n      if (!deepEqual(by, oldBy) || !deepEqual(desc, oldDesc)) {\n        page = 1\n      }\n\n      return { by, desc, page }\n    },\n    group (key: string): void {\n      const { by: groupBy, desc: groupDesc, page } = this.toggle(\n        key,\n        this.internalOptions.groupBy,\n        this.internalOptions.groupDesc,\n        this.internalOptions.page,\n        true,\n        false\n      )\n      this.updateOptions({ groupBy, groupDesc, page })\n    },\n    sort (key: string | string[]): void {\n      if (Array.isArray(key)) return this.sortArray(key)\n\n      const { by: sortBy, desc: sortDesc, page } = this.toggle(\n        key,\n        this.internalOptions.sortBy,\n        this.internalOptions.sortDesc,\n        this.internalOptions.page,\n        this.internalOptions.mustSort,\n        this.internalOptions.multiSort\n      )\n      this.updateOptions({ sortBy, sortDesc, page })\n    },\n    sortArray (sortBy: string[]) {\n      const sortDesc = sortBy.map(s => {\n        const i = this.internalOptions.sortBy.findIndex((k: string) => k === s)\n        return i > -1 ? this.internalOptions.sortDesc[i] : false\n      })\n\n      this.updateOptions({ sortBy, sortDesc })\n    },\n    updateOptions (options: any) {\n      this.internalOptions = {\n        ...this.internalOptions,\n        ...options,\n        page: this.serverItemsLength < 0\n          ? Math.max(1, Math.min(options.page || this.internalOptions.page, this.pageCount))\n          : options.page || this.internalOptions.page,\n      }\n    },\n    sortItems (items: any[]): any[] {\n      let sortBy: string[] = []\n      let sortDesc: boolean[] = []\n\n      if (!this.disableSort) {\n        sortBy = this.internalOptions.sortBy\n        sortDesc = this.internalOptions.sortDesc\n      }\n\n      if (this.internalOptions.groupBy.length) {\n        sortBy = [...this.internalOptions.groupBy, ...sortBy]\n        sortDesc = [...this.internalOptions.groupDesc, ...sortDesc]\n      }\n\n      return this.customSort(items, sortBy, sortDesc, this.locale)\n    },\n    groupItems (items: any[]): ItemGroup<any>[] {\n      return this.customGroup(items, this.internalOptions.groupBy, this.internalOptions.groupDesc)\n    },\n    paginateItems (items: any[]): any[] {\n      // Make sure we don't try to display non-existant page if items suddenly change\n      // TODO: Could possibly move this to pageStart/pageStop?\n      if (this.serverItemsLength === -1 && items.length <= this.pageStart) {\n        this.internalOptions.page = Math.max(1, Math.ceil(items.length / this.internalOptions.itemsPerPage)) || 1 // Prevent NaN\n      }\n\n      return items.slice(this.pageStart, this.pageStop)\n    },\n  },\n\n  render (): VNode {\n    return this.$scopedSlots.default && this.$scopedSlots.default(this.scopedProps) as any\n  },\n})\n"]},"metadata":{},"sourceType":"module"}