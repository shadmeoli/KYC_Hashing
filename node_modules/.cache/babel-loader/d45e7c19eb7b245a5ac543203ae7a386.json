{"ast":null,"code":"import _objectWithoutProperties from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"title\"];\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n// Styles\nimport \"../../../src/components/VCheckbox/VCheckbox.sass\";\nimport \"../../../src/styles/components/_selection-controls.sass\"; // Components\n\nimport VIcon from '../VIcon';\nimport VInput from '../VInput'; // Mixins\n\nimport Selectable from '../../mixins/selectable';\n/* @vue/component */\n\nexport default Selectable.extend({\n  name: 'v-checkbox',\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      \"default\": '$checkboxIndeterminate'\n    },\n    offIcon: {\n      type: String,\n      \"default\": '$checkboxOff'\n    },\n    onIcon: {\n      type: String,\n      \"default\": '$checkboxOn'\n    }\n  },\n  data: function data() {\n    return {\n      inputIndeterminate: this.indeterminate\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, VInput.options.computed.classes.call(this)), {}, {\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate\n      });\n    },\n    computedIcon: function computedIcon() {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon;\n      } else if (this.isActive) {\n        return this.onIcon;\n      } else {\n        return this.offIcon;\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState: function validationState() {\n      if (this.isDisabled && !this.inputIndeterminate) return undefined;\n      if (this.hasError && this.shouldValidate) return 'error';\n      if (this.hasSuccess) return 'success';\n      if (this.hasColor !== null) return this.computedColor;\n      return undefined;\n    }\n  },\n  watch: {\n    indeterminate: function indeterminate(val) {\n      var _this = this;\n\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(function () {\n        return _this.inputIndeterminate = val;\n      });\n    },\n    inputIndeterminate: function inputIndeterminate(val) {\n      this.$emit('update:indeterminate', val);\n    },\n    isActive: function isActive() {\n      if (!this.indeterminate) return;\n      this.inputIndeterminate = false;\n    }\n  },\n  methods: {\n    genCheckbox: function genCheckbox() {\n      var _this$attrs$ = this.attrs$,\n          title = _this$attrs$.title,\n          checkboxAttrs = _objectWithoutProperties(_this$attrs$, _excluded);\n\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input'\n      }, [this.$createElement(VIcon, this.setTextColor(this.validationState, {\n        props: {\n          dense: this.dense,\n          dark: this.dark,\n          light: this.light\n        }\n      }), this.computedIcon), this.genInput('checkbox', _objectSpread(_objectSpread({}, checkboxAttrs), {}, {\n        'aria-checked': this.inputIndeterminate ? 'mixed' : this.isActive.toString()\n      })), this.genRipple(this.setTextColor(this.rippleState))]);\n    },\n    genDefaultSlot: function genDefaultSlot() {\n      return [this.genCheckbox(), this.genLabel()];\n    }\n  }\n});","map":{"version":3,"mappings":"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","names":["VIcon","VInput","Selectable","extend","name","props","indeterminate","Boolean","indeterminateIcon","type","String","offIcon","onIcon","data","inputIndeterminate","computed","classes","options","call","computedIcon","isActive","validationState","isDisabled","undefined","hasError","shouldValidate","hasSuccess","hasColor","computedColor","watch","val","$nextTick","$emit","methods","genCheckbox","attrs$","title","checkboxAttrs","$createElement","staticClass","setTextColor","dense","dark","light","genInput","toString","genRipple","rippleState","genDefaultSlot","genLabel"],"sourceRoot":"","sources":["../../../src/components/VCheckbox/VCheckbox.ts"],"sourcesContent":["// Styles\nimport './VCheckbox.sass'\nimport '../../styles/components/_selection-controls.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-checkbox',\n\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n  },\n\n  data () {\n    return {\n      inputIndeterminate: this.indeterminate,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate,\n      }\n    },\n    computedIcon (): string {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon\n      } else if (this.isActive) {\n        return this.onIcon\n      } else {\n        return this.offIcon\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.isDisabled && !this.inputIndeterminate) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n  },\n\n  watch: {\n    indeterminate (val) {\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(() => (this.inputIndeterminate = val))\n    },\n    inputIndeterminate (val) {\n      this.$emit('update:indeterminate', val)\n    },\n    isActive () {\n      if (!this.indeterminate) return\n      this.inputIndeterminate = false\n    },\n  },\n\n  methods: {\n    genCheckbox () {\n      const { title, ...checkboxAttrs } = this.attrs$\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.$createElement(VIcon, this.setTextColor(this.validationState, {\n          props: {\n            dense: this.dense,\n            dark: this.dark,\n            light: this.light,\n          },\n        }), this.computedIcon),\n        this.genInput('checkbox', {\n          ...checkboxAttrs,\n          'aria-checked': this.inputIndeterminate\n            ? 'mixed'\n            : this.isActive.toString(),\n        }),\n        this.genRipple(this.setTextColor(this.rippleState)),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genCheckbox(),\n        this.genLabel(),\n      ]\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"module"}