{"ast":null,"code":"import _toConsumableArray from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.map.js\";\n// Types\nimport Vue from 'vue'; // Utils\n\nimport { getObjectValueByPath, wrapInArray } from '../../util/helpers';\n\nfunction needsTd(slot) {\n  var _a;\n\n  return slot.length !== 1 || !['td', 'th'].includes((_a = slot[0]) === null || _a === void 0 ? void 0 : _a.tag);\n}\n\nexport default Vue.extend({\n  name: 'row',\n  functional: true,\n  props: {\n    headers: Array,\n    index: Number,\n    item: Object,\n    rtl: Boolean\n  },\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        slots = _ref.slots,\n        data = _ref.data;\n    var computedSlots = slots();\n    var columns = props.headers.map(function (header) {\n      var children = [];\n      var value = getObjectValueByPath(props.item, header.value);\n      var slotName = header.value;\n      var scopedSlot = data.scopedSlots && data.scopedSlots.hasOwnProperty(slotName) && data.scopedSlots[slotName];\n      var regularSlot = computedSlots.hasOwnProperty(slotName) && computedSlots[slotName];\n\n      if (scopedSlot) {\n        children.push.apply(children, _toConsumableArray(wrapInArray(scopedSlot({\n          item: props.item,\n          isMobile: false,\n          header: header,\n          index: props.index,\n          value: value\n        }))));\n      } else if (regularSlot) {\n        children.push.apply(children, _toConsumableArray(wrapInArray(regularSlot)));\n      } else {\n        children.push(value == null ? value : String(value));\n      }\n\n      var textAlign = \"text-\".concat(header.align || 'start');\n      return needsTd(children) ? h('td', {\n        \"class\": [textAlign, header.cellClass, {\n          'v-data-table__divider': header.divider\n        }]\n      }, children) : children;\n    });\n    return h('tr', data, columns);\n  }\n});","map":{"version":3,"mappings":";;;;AAAA;AACA,OAAOA,GAAP,MAAqC,KAArC,C,CAGA;;AACA,SAASC,oBAAT,EAA+BC,WAA/B,QAAkD,oBAAlD;;AAEA,SAASC,OAAT,CAAkBC,IAAlB,EAA2C;;;EACzC,OAAOA,IAAK,CAACC,MAAN,KAAiB,CAAjB,IACL,CAAC,CAAC,IAAD,EAAO,IAAP,EAAaC,QAAb,CAAsB,UAAK,CAAC,CAAD,CAAL,MAAQ,IAAR,IAAQC,aAAR,GAAQ,MAAR,GAAQA,GAAEC,GAAhC,CADH;AAED;;AAED,eAAeR,GAAG,CAACS,MAAJ,CAAW;EACxBC,IAAI,EAAE,KADkB;EAGxBC,UAAU,EAAE,IAHY;EAKxBC,KAAK,EAAE;IACLC,OAAO,EAAEC,KADJ;IAELC,KAAK,EAAEC,MAFF;IAGLC,IAAI,EAAEC,MAHD;IAILC,GAAG,EAAEC;EAJA,CALiB;EAYxBC,MAZwB,kBAYhBC,CAZgB,QAYS;IAAA,IAApBV,KAAoB,QAApBA,KAAoB;IAAA,IAAbW,KAAa,QAAbA,KAAa;IAAA,IAANC,IAAM,QAANA,IAAM;IAC/B,IAAMC,aAAa,GAAGF,KAAK,EAA3B;IAEA,IAAMG,OAAO,GAAGd,KAAK,CAACC,OAAN,CAAcc,GAAd,CAAmB,gBAAD,EAA4B;MAC5D,IAAMC,QAAQ,GAAG,EAAjB;MACA,IAAMC,KAAK,GAAG5B,oBAAoB,CAACW,KAAK,CAACK,IAAP,EAAaa,MAAM,CAACD,KAApB,CAAlC;MAEA,IAAME,QAAQ,GAAGD,MAAM,CAACD,KAAxB;MACA,IAAMG,UAAU,GAAGR,IAAI,CAACS,WAAL,IAAoBT,IAAI,CAACS,WAAL,CAAiBC,cAAjB,CAAgCH,QAAhC,CAApB,IAAiEP,IAAI,CAACS,WAAL,CAAiBF,QAAjB,CAApF;MACA,IAAMI,WAAW,GAAGV,aAAa,CAACS,cAAd,CAA6BH,QAA7B,KAA0CN,aAAa,CAACM,QAAD,CAA3E;;MAEA,IAAIC,UAAJ,EAAgB;QACdJ,QAAQ,CAACQ,IAAT,eAAQ,qBAASlC,WAAW,CAAC8B,UAAU,CAAC;UACtCf,IAAI,EAAEL,KAAK,CAACK,IAD0B;UAEtCoB,QAAQ,EAAE,KAF4B;UAGtCP,MAHsC,EAGtCA,MAHsC;UAItCf,KAAK,EAAEH,KAAK,CAACG,KAJyB;UAKtCc;QALsC,CAAD,CAAX,CAApB,EAAR;MADF,OAQO,IAAIM,WAAJ,EAAiB;QACtBP,QAAQ,CAACQ,IAAT,eAAQ,qBAASlC,WAAW,CAACiC,WAAD,CAApB,EAAR;MADK,OAEA;QACLP,QAAQ,CAACQ,IAAT,CAAcP,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwBS,MAAM,CAACT,KAAD,CAA5C;MACD;;MAED,IAAMU,SAAS,kBAAWT,MAAM,CAACU,KAAP,IAAgB,OAA3B,CAAf;MAEA,OAAOrC,OAAO,CAACyB,QAAD,CAAP,GACHN,CAAC,CAAC,IAAD,EAAO;QACR,SAAO,CACLiB,SADK,EAELT,MAAM,CAACW,SAFF,EAGL;UACE,yBAAyBX,MAAM,CAACY;QADlC,CAHK;MADC,CAAP,EAQAd,QARA,CADE,GAUHA,QAVJ;IAxBc,EAAhB;IAqCA,OAAON,CAAC,CAAC,IAAD,EAAOE,IAAP,EAAaE,OAAb,CAAR;EACD;AArDuB,CAAX,CAAf","names":["Vue","getObjectValueByPath","wrapInArray","needsTd","slot","length","includes","_a","tag","extend","name","functional","props","headers","Array","index","Number","item","Object","rtl","Boolean","render","h","slots","data","computedSlots","columns","map","children","value","header","slotName","scopedSlot","scopedSlots","hasOwnProperty","regularSlot","push","isMobile","String","textAlign","align","cellClass","divider"],"sourceRoot":"","sources":["../../../src/components/VDataTable/Row.ts"],"sourcesContent":["// Types\nimport Vue, { VNode, PropType } from 'vue'\nimport { DataTableHeader } from 'vuetify/types'\n\n// Utils\nimport { getObjectValueByPath, wrapInArray } from '../../util/helpers'\n\nfunction needsTd (slot: VNode[] | undefined) {\n  return slot!.length !== 1 ||\n    !['td', 'th'].includes(slot![0]?.tag!)\n}\n\nexport default Vue.extend({\n  name: 'row',\n\n  functional: true,\n\n  props: {\n    headers: Array as PropType<DataTableHeader[]>,\n    index: Number,\n    item: Object,\n    rtl: Boolean,\n  },\n\n  render (h, { props, slots, data }): VNode {\n    const computedSlots = slots()\n\n    const columns = props.headers.map((header: DataTableHeader) => {\n      const children = []\n      const value = getObjectValueByPath(props.item, header.value)\n\n      const slotName = header.value\n      const scopedSlot = data.scopedSlots && data.scopedSlots.hasOwnProperty(slotName) && data.scopedSlots[slotName]\n      const regularSlot = computedSlots.hasOwnProperty(slotName) && computedSlots[slotName]\n\n      if (scopedSlot) {\n        children.push(...wrapInArray(scopedSlot({\n          item: props.item,\n          isMobile: false,\n          header,\n          index: props.index,\n          value,\n        })))\n      } else if (regularSlot) {\n        children.push(...wrapInArray(regularSlot))\n      } else {\n        children.push(value == null ? value : String(value))\n      }\n\n      const textAlign = `text-${header.align || 'start'}`\n\n      return needsTd(children)\n        ? h('td', {\n          class: [\n            textAlign,\n            header.cellClass,\n            {\n              'v-data-table__divider': header.divider,\n            },\n          ],\n        }, children)\n        : children\n    })\n\n    return h('tr', data, columns)\n  },\n})\n"]},"metadata":{},"sourceType":"module"}