{"ast":null,"code":"import _objectWithoutProperties from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _typeof from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _objectSpread from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"a\"];\nimport \"core-js/modules/es.string.substr.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\n// Utilities\nimport { HSVAtoRGBA, HSVAtoHex, RGBAtoHSVA, HexToHSVA, HSVAtoHSLA, RGBAtoHex, HSLAtoHSVA, parseHex } from '../../../util/colorUtils';\nexport function fromHSVA(hsva) {\n  hsva = _objectSpread({}, hsva);\n  var hexa = HSVAtoHex(hsva);\n  var hsla = HSVAtoHSLA(hsva);\n  var rgba = HSVAtoRGBA(hsva);\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa: hexa,\n    hsla: hsla,\n    hsva: hsva,\n    hue: hsva.h,\n    rgba: rgba\n  };\n}\nexport function fromHSLA(hsla) {\n  var hsva = HSLAtoHSVA(hsla);\n  var hexa = HSVAtoHex(hsva);\n  var rgba = HSVAtoRGBA(hsva);\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa: hexa,\n    hsla: hsla,\n    hsva: hsva,\n    hue: hsva.h,\n    rgba: rgba\n  };\n}\nexport function fromRGBA(rgba) {\n  var hsva = RGBAtoHSVA(rgba);\n  var hexa = RGBAtoHex(rgba);\n  var hsla = HSVAtoHSLA(hsva);\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa: hexa,\n    hsla: hsla,\n    hsva: hsva,\n    hue: hsva.h,\n    rgba: rgba\n  };\n}\nexport function fromHexa(hexa) {\n  var hsva = HexToHSVA(hexa);\n  var hsla = HSVAtoHSLA(hsva);\n  var rgba = HSVAtoRGBA(hsva);\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa: hexa,\n    hsla: hsla,\n    hsva: hsva,\n    hue: hsva.h,\n    rgba: rgba\n  };\n}\nexport function fromHex(hex) {\n  return fromHexa(parseHex(hex));\n}\n\nfunction has(obj, key) {\n  return key.every(function (k) {\n    return obj.hasOwnProperty(k);\n  });\n}\n\nexport function parseColor(color, oldColor) {\n  if (!color) return fromRGBA({\n    r: 255,\n    g: 0,\n    b: 0,\n    a: 1\n  });\n\n  if (typeof color === 'string') {\n    if (color === 'transparent') return fromHexa('#00000000');\n    var hex = parseHex(color);\n    if (oldColor && hex === oldColor.hexa) return oldColor;else return fromHexa(hex);\n  }\n\n  if (_typeof(color) === 'object') {\n    if (color.hasOwnProperty('alpha')) return color;\n    var a = color.hasOwnProperty('a') ? parseFloat(color.a) : 1;\n\n    if (has(color, ['r', 'g', 'b'])) {\n      if (oldColor && color === oldColor.rgba) return oldColor;else return fromRGBA(_objectSpread(_objectSpread({}, color), {}, {\n        a: a\n      }));\n    } else if (has(color, ['h', 's', 'l'])) {\n      if (oldColor && color === oldColor.hsla) return oldColor;else return fromHSLA(_objectSpread(_objectSpread({}, color), {}, {\n        a: a\n      }));\n    } else if (has(color, ['h', 's', 'v'])) {\n      if (oldColor && color === oldColor.hsva) return oldColor;else return fromHSVA(_objectSpread(_objectSpread({}, color), {}, {\n        a: a\n      }));\n    }\n  }\n\n  return fromRGBA({\n    r: 255,\n    g: 0,\n    b: 0,\n    a: 1\n  });\n}\n\nfunction stripAlpha(color, stripAlpha) {\n  if (stripAlpha) {\n    var a = color.a,\n        rest = _objectWithoutProperties(color, _excluded);\n\n    return rest;\n  }\n\n  return color;\n}\n\nexport function extractColor(color, input) {\n  if (input == null) return color;\n\n  if (typeof input === 'string') {\n    return input.length === 7 ? color.hex : color.hexa;\n  }\n\n  if (_typeof(input) === 'object') {\n    var shouldStrip = typeof input.a === 'number' && input.a === 0 ? !!input.a : !input.a;\n    if (has(input, ['r', 'g', 'b'])) return stripAlpha(color.rgba, shouldStrip);else if (has(input, ['h', 's', 'l'])) return stripAlpha(color.hsla, shouldStrip);else if (has(input, ['h', 's', 'v'])) return stripAlpha(color.hsva, shouldStrip);\n  }\n\n  return color;\n}\nexport function hasAlpha(color) {\n  if (!color) return false;\n\n  if (typeof color === 'string') {\n    return color.length > 7;\n  }\n\n  if (_typeof(color) === 'object') {\n    return has(color, ['a']) || has(color, ['alpha']);\n  }\n\n  return false;\n}","map":{"version":3,"mappings":"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","names":["HSVAtoRGBA","HSVAtoHex","RGBAtoHSVA","HexToHSVA","HSVAtoHSLA","RGBAtoHex","HSLAtoHSVA","parseHex","fromHSVA","hsva","hexa","hsla","rgba","alpha","a","hex","substr","hue","h","fromHSLA","fromRGBA","fromHexa","fromHex","has","obj","key","every","hasOwnProperty","k","parseColor","color","oldColor","r","g","b","parseFloat","stripAlpha","rest","extractColor","input","length","shouldStrip","hasAlpha"],"sourceRoot":"","sources":["../../../../src/components/VColorPicker/util/index.ts"],"sourcesContent":["// Utilities\nimport {\n  HSVA,\n  HSVAtoRGBA,\n  HSVAtoHex,\n  RGBA,\n  Hex,\n  RGBAtoHSVA,\n  HexToHSVA,\n  HSLA,\n  HSVAtoHSLA,\n  RGBAtoHex,\n  HSLAtoHSVA,\n  parseHex,\n  Hexa,\n} from '../../../util/colorUtils'\n\nexport interface VColorPickerColor {\n  alpha: number\n  hex: Hex\n  hexa: Hexa\n  hsla: HSLA\n  hsva: HSVA\n  hue: number\n  rgba: RGBA\n}\n\nexport function fromHSVA (hsva: HSVA): VColorPickerColor {\n  hsva = { ...hsva }\n  const hexa = HSVAtoHex(hsva)\n  const hsla = HSVAtoHSLA(hsva)\n  const rgba = HSVAtoRGBA(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba,\n  }\n}\n\nexport function fromHSLA (hsla: HSLA): VColorPickerColor {\n  const hsva = HSLAtoHSVA(hsla)\n  const hexa = HSVAtoHex(hsva)\n  const rgba = HSVAtoRGBA(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba,\n  }\n}\n\nexport function fromRGBA (rgba: RGBA): VColorPickerColor {\n  const hsva = RGBAtoHSVA(rgba)\n  const hexa = RGBAtoHex(rgba)\n  const hsla = HSVAtoHSLA(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba,\n  }\n}\n\nexport function fromHexa (hexa: Hexa): VColorPickerColor {\n  const hsva = HexToHSVA(hexa)\n  const hsla = HSVAtoHSLA(hsva)\n  const rgba = HSVAtoRGBA(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba,\n  }\n}\n\nexport function fromHex (hex: Hex): VColorPickerColor {\n  return fromHexa(parseHex(hex))\n}\n\nfunction has (obj: object, key: string[]) {\n  return key.every(k => obj.hasOwnProperty(k))\n}\n\nexport function parseColor (color: any, oldColor: VColorPickerColor | null) {\n  if (!color) return fromRGBA({ r: 255, g: 0, b: 0, a: 1 })\n\n  if (typeof color === 'string') {\n    if (color === 'transparent') return fromHexa('#00000000')\n\n    const hex = parseHex(color)\n\n    if (oldColor && hex === oldColor.hexa) return oldColor\n    else return fromHexa(hex)\n  }\n\n  if (typeof color === 'object') {\n    if (color.hasOwnProperty('alpha')) return color\n\n    const a = color.hasOwnProperty('a') ? parseFloat(color.a) : 1\n\n    if (has(color, ['r', 'g', 'b'])) {\n      if (oldColor && color === oldColor.rgba) return oldColor\n      else return fromRGBA({ ...color, a })\n    } else if (has(color, ['h', 's', 'l'])) {\n      if (oldColor && color === oldColor.hsla) return oldColor\n      else return fromHSLA({ ...color, a })\n    } else if (has(color, ['h', 's', 'v'])) {\n      if (oldColor && color === oldColor.hsva) return oldColor\n      else return fromHSVA({ ...color, a })\n    }\n  }\n\n  return fromRGBA({ r: 255, g: 0, b: 0, a: 1 })\n}\n\nfunction stripAlpha (color: any, stripAlpha: boolean) {\n  if (stripAlpha) {\n    const { a, ...rest } = color\n\n    return rest\n  }\n\n  return color\n}\n\nexport function extractColor (color: VColorPickerColor, input: any) {\n  if (input == null) return color\n\n  if (typeof input === 'string') {\n    return input.length === 7 ? color.hex : color.hexa\n  }\n\n  if (typeof input === 'object') {\n    const shouldStrip = typeof input.a === 'number' && input.a === 0 ? !!input.a : !input.a\n    if (has(input, ['r', 'g', 'b'])) return stripAlpha(color.rgba, shouldStrip)\n    else if (has(input, ['h', 's', 'l'])) return stripAlpha(color.hsla, shouldStrip)\n    else if (has(input, ['h', 's', 'v'])) return stripAlpha(color.hsva, shouldStrip)\n  }\n\n  return color\n}\n\nexport function hasAlpha (color: any) {\n  if (!color) return false\n\n  if (typeof color === 'string') {\n    return color.length > 7\n  }\n\n  if (typeof color === 'object') {\n    return has(color, ['a']) || has(color, ['alpha'])\n  }\n\n  return false\n}\n"]},"metadata":{},"sourceType":"module"}