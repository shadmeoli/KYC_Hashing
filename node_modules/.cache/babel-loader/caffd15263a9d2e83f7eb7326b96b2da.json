{"ast":null,"code":"import _objectWithoutProperties from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _typeof from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nvar _excluded = [\"once\"];\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.string.sub.js\";\n\nfunction inserted(el, binding, vnode) {\n  var modifiers = binding.modifiers || {};\n  var value = binding.value;\n  var callback = _typeof(value) === 'object' ? value.handler : value;\n\n  var once = modifiers.once,\n      modifierKeys = _objectWithoutProperties(modifiers, _excluded);\n\n  var hasModifiers = Object.keys(modifierKeys).length > 0; // Options take top priority\n\n  var options = _typeof(value) === 'object' && value.options ? value.options : hasModifiers // If we have modifiers, use only those provided\n  ? {\n    attributes: modifierKeys.attr,\n    childList: modifierKeys.child,\n    subtree: modifierKeys.sub,\n    characterData: modifierKeys[\"char\"]\n  } // Defaults to everything on\n  : {\n    attributes: true,\n    childList: true,\n    subtree: true,\n    characterData: true\n  };\n  var observer = new MutationObserver(function (mutationsList, observer) {\n    /* istanbul ignore if */\n    if (!el._mutate) return; // Just in case, should never fire\n\n    callback(mutationsList, observer); // If has the once modifier, unbind\n\n    once && unbind(el, binding, vnode);\n  });\n  observer.observe(el, options);\n  el._mutate = Object(el._mutate);\n  el._mutate[vnode.context._uid] = {\n    observer: observer\n  };\n}\n\nfunction unbind(el, binding, vnode) {\n  var _a;\n\n  if (!((_a = el._mutate) === null || _a === void 0 ? void 0 : _a[vnode.context._uid])) return;\n\n  el._mutate[vnode.context._uid].observer.disconnect();\n\n  delete el._mutate[vnode.context._uid];\n}\n\nexport var Mutate = {\n  inserted: inserted,\n  unbind: unbind\n};\nexport default Mutate;","map":{"version":3,"mappings":";;;;;;AAkBA,SAASA,QAAT,CAAmBC,EAAnB,EAAoCC,OAApC,EAAmEC,KAAnE,EAA+E;EAC7E,IAAMC,SAAS,GAAGF,OAAO,CAACE,SAAR,IAAqB,EAAvC;EACA,IAAMC,KAAK,GAAGH,OAAO,CAACG,KAAtB;EACA,IAAMC,QAAQ,GAAG,QAAOD,KAAP,MAAiB,QAAjB,GAA4BA,KAAK,CAACE,OAAlC,GAA4CF,KAA7D;;EACA,IAAQG,IAAR,GAAkCJ,SAAlC,CAAQI,IAAR;EAAA,IAAiBC,YAAjB,4BAAkCL,SAAlC;;EACA,IAAMM,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYH,YAAZ,EAA0BI,MAA1B,GAAmC,CAAxD,CAL6E,CAO7E;;EACA,IAAMC,OAAO,GAAG,QAAOT,KAAP,MAAiB,QAAjB,IAA6BA,KAAK,CAACS,OAAnC,GACZT,KAAK,CAACS,OADM,GAEZJ,YAAY,CACZ;EADY,EAEV;IACAK,UAAU,EAAEN,YAAY,CAACO,IADzB;IAEAC,SAAS,EAAER,YAAY,CAACS,KAFxB;IAGAC,OAAO,EAAEV,YAAY,CAACW,GAHtB;IAIAC,aAAa,EAAEZ,YAAY;EAJ3B,CAFU,CAQZ;EARY,EASV;IACAM,UAAU,EAAE,IADZ;IAEAE,SAAS,EAAE,IAFX;IAGAE,OAAO,EAAE,IAHT;IAIAE,aAAa,EAAE;EAJf,CAXN;EAkBA,IAAMC,QAAQ,GAAG,IAAIC,gBAAJ,CAAqB,UACpCC,aADoC,EAEpCF,QAFoC,EAGlC;IACF;IACA,IAAI,CAACrB,EAAE,CAACwB,OAAR,EAAiB,OAFf,CAEsB;;IAExBnB,QAAQ,CAACkB,aAAD,EAAgBF,QAAhB,CAAR,CAJE,CAMF;;IACAd,IAAI,IAAIkB,MAAM,CAACzB,EAAD,EAAKC,OAAL,EAAcC,KAAd,CAAd;EAVe,EAAjB;EAaAmB,QAAQ,CAACK,OAAT,CAAiB1B,EAAjB,EAAqBa,OAArB;EACAb,EAAE,CAACwB,OAAH,GAAad,MAAM,CAACV,EAAE,CAACwB,OAAJ,CAAnB;EACAxB,EAAE,CAACwB,OAAH,CAAYtB,KAAK,CAACyB,OAAN,CAAeC,IAA3B,IAAmC;IAAEP;EAAF,CAAnC;AACD;;AAED,SAASI,MAAT,CAAiBzB,EAAjB,EAAkCC,OAAlC,EAAiEC,KAAjE,EAA6E;;;EAC3E,IAAI,EAAC,QAAE,CAACsB,OAAH,MAAU,IAAV,IAAUK,aAAV,GAAU,MAAV,GAAUA,GAAG3B,KAAK,CAACyB,OAAN,CAAeC,IAAlB,CAAX,CAAJ,EAAwC;;EAExC5B,EAAE,CAACwB,OAAH,CAAWtB,KAAK,CAACyB,OAAN,CAAeC,IAA1B,EAAiCP,QAAjC,CAA0CS,UAA1C;;EACA,OAAO9B,EAAE,CAACwB,OAAH,CAAWtB,KAAK,CAACyB,OAAN,CAAeC,IAA1B,CAAP;AACD;;AAED,OAAO,IAAMG,MAAM,GAAG;EACpBhC,QADoB,EACpBA,QADoB;EAEpB0B;AAFoB,CAAf;AAKP,eAAeM,MAAf","names":["inserted","el","binding","vnode","modifiers","value","callback","handler","once","modifierKeys","hasModifiers","Object","keys","length","options","attributes","attr","childList","child","subtree","sub","characterData","observer","MutationObserver","mutationsList","_mutate","unbind","observe","context","_uid","_a","disconnect","Mutate"],"sourceRoot":"","sources":["../../../src/directives/mutate/index.ts"],"sourcesContent":["import { VNode, VNodeDirective } from 'vue'\n\ntype MutateHandler = (\n  mutationsList: MutationRecord[],\n  observer: MutationObserver,\n) => void\n\ninterface MutateVNodeDirective extends Omit<VNodeDirective, 'modifiers'> {\n  value?: MutateHandler | { handler: MutateHandler, options?: MutationObserverInit }\n  modifiers?: {\n    once?: boolean\n    attr?: boolean\n    child?: boolean\n    sub?: boolean\n    char?: boolean\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: MutateVNodeDirective, vnode: VNode) {\n  const modifiers = binding.modifiers || {}\n  const value = binding.value\n  const callback = typeof value === 'object' ? value.handler : value!\n  const { once, ...modifierKeys } = modifiers\n  const hasModifiers = Object.keys(modifierKeys).length > 0\n\n  // Options take top priority\n  const options = typeof value === 'object' && value.options\n    ? value.options\n    : hasModifiers\n      // If we have modifiers, use only those provided\n      ? {\n        attributes: modifierKeys.attr,\n        childList: modifierKeys.child,\n        subtree: modifierKeys.sub,\n        characterData: modifierKeys.char,\n      }\n      // Defaults to everything on\n      : {\n        attributes: true,\n        childList: true,\n        subtree: true,\n        characterData: true,\n      }\n\n  const observer = new MutationObserver((\n    mutationsList: MutationRecord[],\n    observer: MutationObserver\n  ) => {\n    /* istanbul ignore if */\n    if (!el._mutate) return // Just in case, should never fire\n\n    callback(mutationsList, observer)\n\n    // If has the once modifier, unbind\n    once && unbind(el, binding, vnode)\n  })\n\n  observer.observe(el, options)\n  el._mutate = Object(el._mutate)\n  el._mutate![vnode.context!._uid] = { observer }\n}\n\nfunction unbind (el: HTMLElement, binding: MutateVNodeDirective, vnode: VNode) {\n  if (!el._mutate?.[vnode.context!._uid]) return\n\n  el._mutate[vnode.context!._uid]!.observer.disconnect()\n  delete el._mutate[vnode.context!._uid]\n}\n\nexport const Mutate = {\n  inserted,\n  unbind,\n}\n\nexport default Mutate\n"]},"metadata":{},"sourceType":"module"}