{"ast":null,"code":"import _objectSpread from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.find.js\";\n// Mixins\nimport mixins from '../../util/mixins';\nimport BindsAttrs from '../../mixins/binds-attrs';\nimport { provide as RegistrableProvide } from '../../mixins/registrable';\n/* @vue/component */\n\nexport default mixins(BindsAttrs, RegistrableProvide('form')\n/* @vue/component */\n).extend({\n  name: 'v-form',\n  provide: function provide() {\n    return {\n      form: this\n    };\n  },\n  inheritAttrs: false,\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean\n  },\n  data: function data() {\n    return {\n      inputs: [],\n      watchers: [],\n      errorBag: {}\n    };\n  },\n  watch: {\n    errorBag: {\n      handler: function handler(val) {\n        var errors = Object.values(val).includes(true);\n        this.$emit('input', !errors);\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    watchInput: function watchInput(input) {\n      var _this = this;\n\n      var watcher = function watcher(input) {\n        return input.$watch('hasError', function (val) {\n          _this.$set(_this.errorBag, input._uid, val);\n        }, {\n          immediate: true\n        });\n      };\n\n      var watchers = {\n        _uid: input._uid,\n        valid: function valid() {},\n        shouldValidate: function shouldValidate() {}\n      };\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', function (val) {\n          if (!val) return; // Only watch if we're not already doing it\n\n          if (_this.errorBag.hasOwnProperty(input._uid)) return;\n          watchers.valid = watcher(input);\n        });\n      } else {\n        watchers.valid = watcher(input);\n      }\n\n      return watchers;\n    },\n\n    /** @public */\n    validate: function validate() {\n      return this.inputs.filter(function (input) {\n        return !input.validate(true);\n      }).length === 0;\n    },\n\n    /** @public */\n    reset: function reset() {\n      this.inputs.forEach(function (input) {\n        return input.reset();\n      });\n      this.resetErrorBag();\n    },\n    resetErrorBag: function resetErrorBag() {\n      var _this2 = this;\n\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(function () {\n          _this2.errorBag = {};\n        }, 0);\n      }\n    },\n\n    /** @public */\n    resetValidation: function resetValidation() {\n      this.inputs.forEach(function (input) {\n        return input.resetValidation();\n      });\n      this.resetErrorBag();\n    },\n    register: function register(input) {\n      this.inputs.push(input);\n      this.watchers.push(this.watchInput(input));\n    },\n    unregister: function unregister(input) {\n      var found = this.inputs.find(function (i) {\n        return i._uid === input._uid;\n      });\n      if (!found) return;\n      var unwatch = this.watchers.find(function (i) {\n        return i._uid === found._uid;\n      });\n\n      if (unwatch) {\n        unwatch.valid();\n        unwatch.shouldValidate();\n      }\n\n      this.watchers = this.watchers.filter(function (i) {\n        return i._uid !== found._uid;\n      });\n      this.inputs = this.inputs.filter(function (i) {\n        return i._uid !== found._uid;\n      });\n      this.$delete(this.errorBag, found._uid);\n    }\n  },\n  render: function render(h) {\n    var _this3 = this;\n\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: _objectSpread({\n        novalidate: true\n      }, this.attrs$),\n      on: {\n        submit: function submit(e) {\n          return _this3.$emit('submit', e);\n        }\n      }\n    }, this.$slots[\"default\"]);\n  }\n});","map":{"version":3,"mappings":"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","names":["mixins","BindsAttrs","provide","RegistrableProvide","extend","name","form","inheritAttrs","props","disabled","Boolean","lazyValidation","readonly","value","data","inputs","watchers","errorBag","watch","handler","val","errors","Object","values","includes","$emit","deep","immediate","methods","watchInput","input","watcher","$watch","$set","_uid","valid","shouldValidate","hasOwnProperty","validate","filter","length","reset","forEach","resetErrorBag","setTimeout","resetValidation","register","push","unregister","found","find","i","unwatch","$delete","render","h","staticClass","attrs","novalidate","attrs$","on","submit","e","$slots"],"sourceRoot":"","sources":["../../../src/components/VForm/VForm.ts"],"sourcesContent":["// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n"]},"metadata":{},"sourceType":"module"}