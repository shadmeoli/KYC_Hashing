{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"/home/elkimza/Documents/KYC_Hashing/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.math.sign.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.slice.js\";\n// Styles\nimport \"../../../src/components/VSlideGroup/VSlideGroup.sass\"; // Components\n\nimport VIcon from '../VIcon';\nimport { VFadeTransition } from '../transitions'; // Extensions\n\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'; // Mixins\n\nimport Mobile from '../../mixins/mobile'; // Directives\n\nimport Resize from '../../directives/resize';\nimport Touch from '../../directives/touch'; // Utilities\n\nimport mixins from '../../util/mixins';\nimport { composedPath } from '../../util/helpers';\n\nfunction bias(val) {\n  var c = 0.501;\n  var x = Math.abs(val);\n  return Math.sign(val) * (x / ((1 / c - 2) * (1 - x) + 1));\n}\n\nexport function calculateUpdatedOffset(selectedElement, widths, rtl, currentScrollOffset) {\n  var clientWidth = selectedElement.clientWidth;\n  var offsetLeft = rtl ? widths.content - selectedElement.offsetLeft - clientWidth : selectedElement.offsetLeft;\n\n  if (rtl) {\n    currentScrollOffset = -currentScrollOffset;\n  }\n\n  var totalWidth = widths.wrapper + currentScrollOffset;\n  var itemOffset = clientWidth + offsetLeft;\n  var additionalOffset = clientWidth * 0.4;\n\n  if (offsetLeft <= currentScrollOffset) {\n    currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0);\n  } else if (totalWidth <= itemOffset) {\n    currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper);\n  }\n\n  return rtl ? -currentScrollOffset : currentScrollOffset;\n}\nexport function calculateCenteredOffset(selectedElement, widths, rtl) {\n  var offsetLeft = selectedElement.offsetLeft,\n      clientWidth = selectedElement.clientWidth;\n\n  if (rtl) {\n    var offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2;\n    return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered));\n  } else {\n    var _offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2;\n\n    return Math.min(widths.content - widths.wrapper, Math.max(0, _offsetCentered));\n  }\n}\nexport var BaseSlideGroup = mixins(BaseItemGroup, Mobile).extend({\n  name: 'base-slide-group',\n  directives: {\n    Resize: Resize,\n    Touch: Touch\n  },\n  props: {\n    activeClass: {\n      type: String,\n      \"default\": 'v-slide-item--active'\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      \"default\": '$next'\n    },\n    prevIcon: {\n      type: String,\n      \"default\": '$prev'\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: function validator(v) {\n        return typeof v === 'boolean' || ['always', 'desktop', 'mobile'].includes(v);\n      }\n    }\n  },\n  data: function data() {\n    return {\n      isOverflowing: false,\n      resizeTimeout: 0,\n      startX: 0,\n      isSwipingHorizontal: false,\n      isSwiping: false,\n      scrollOffset: 0,\n      widths: {\n        content: 0,\n        wrapper: 0\n      }\n    };\n  },\n  computed: {\n    canTouch: function canTouch() {\n      return typeof window !== 'undefined';\n    },\n    __cachedNext: function __cachedNext() {\n      return this.genTransition('next');\n    },\n    __cachedPrev: function __cachedPrev() {\n      return this.genTransition('prev');\n    },\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, BaseItemGroup.options.computed.classes.call(this)), {}, {\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing\n      });\n    },\n    hasAffixes: function hasAffixes() {\n      switch (this.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always':\n          return true;\n        // Always show arrows on desktop\n\n        case 'desktop':\n          return !this.isMobile;\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n\n        case true:\n          return this.isOverflowing || Math.abs(this.scrollOffset) > 0;\n        // Always show on mobile\n\n        case 'mobile':\n          return this.isMobile || this.isOverflowing || Math.abs(this.scrollOffset) > 0;\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n\n        default:\n          return !this.isMobile && (this.isOverflowing || Math.abs(this.scrollOffset) > 0);\n      }\n    },\n    hasNext: function hasNext() {\n      if (!this.hasAffixes) return false;\n      var _this$widths = this.widths,\n          content = _this$widths.content,\n          wrapper = _this$widths.wrapper; // Check one scroll ahead to know the width of right-most item\n\n      return content > Math.abs(this.scrollOffset) + wrapper;\n    },\n    hasPrev: function hasPrev() {\n      return this.hasAffixes && this.scrollOffset !== 0;\n    }\n  },\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset: function scrollOffset(val) {\n      if (this.$vuetify.rtl) val = -val;\n      var scroll = val <= 0 ? bias(-val) : val > this.widths.content - this.widths.wrapper ? -(this.widths.content - this.widths.wrapper) + bias(this.widths.content - this.widths.wrapper - val) : -val;\n      if (this.$vuetify.rtl) scroll = -scroll;\n      this.$refs.content.style.transform = \"translateX(\".concat(scroll, \"px)\");\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (typeof ResizeObserver !== 'undefined') {\n      var obs = new ResizeObserver(function () {\n        _this.onResize();\n      });\n      obs.observe(this.$el);\n      obs.observe(this.$refs.content);\n      this.$on('hook:destroyed', function () {\n        obs.disconnect();\n      });\n    } else {\n      var itemsLength = 0;\n      this.$on('hook:beforeUpdate', function () {\n        var _a;\n\n        itemsLength = (((_a = _this.$refs.content) === null || _a === void 0 ? void 0 : _a.children) || []).length;\n      });\n      this.$on('hook:updated', function () {\n        var _a;\n\n        if (itemsLength === (((_a = _this.$refs.content) === null || _a === void 0 ? void 0 : _a.children) || []).length) return;\n\n        _this.setWidths();\n      });\n    }\n  },\n  methods: {\n    onScroll: function onScroll() {\n      this.$refs.wrapper.scrollLeft = 0;\n    },\n    onFocusin: function onFocusin(e) {\n      if (!this.isOverflowing) return; // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n\n      var _iterator = _createForOfIteratorHelper(composedPath(e)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var el = _step.value;\n\n          var _iterator2 = _createForOfIteratorHelper(this.items),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var vm = _step2.value;\n\n              if (vm.$el === el) {\n                this.scrollOffset = calculateUpdatedOffset(vm.$el, this.widths, this.$vuetify.rtl, this.scrollOffset);\n                return;\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    },\n    // Always generate next for scrollable hint\n    genNext: function genNext() {\n      var _this2 = this;\n\n      var slot = this.$scopedSlots.next ? this.$scopedSlots.next({}) : this.$slots.next || this.__cachedNext;\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        \"class\": {\n          'v-slide-group__next--disabled': !this.hasNext\n        },\n        on: {\n          click: function click() {\n            return _this2.onAffixClick('next');\n          }\n        },\n        key: 'next'\n      }, [slot]);\n    },\n    genContent: function genContent() {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n        on: {\n          focusin: this.onFocusin\n        }\n      }, this.$slots[\"default\"]);\n    },\n    genData: function genData() {\n      return {\n        \"class\": this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize\n        }]\n      };\n    },\n    genIcon: function genIcon(location) {\n      var icon = location;\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next';\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev';\n      }\n\n      var upperLocation = \"\".concat(location[0].toUpperCase()).concat(location.slice(1));\n      var hasAffix = this[\"has\".concat(upperLocation)];\n      if (!this.showArrows && !hasAffix) return null;\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix\n        }\n      }, this[\"\".concat(icon, \"Icon\")]);\n    },\n    // Always generate prev for scrollable hint\n    genPrev: function genPrev() {\n      var _this3 = this;\n\n      var slot = this.$scopedSlots.prev ? this.$scopedSlots.prev({}) : this.$slots.prev || this.__cachedPrev;\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        \"class\": {\n          'v-slide-group__prev--disabled': !this.hasPrev\n        },\n        on: {\n          click: function click() {\n            return _this3.onAffixClick('prev');\n          }\n        },\n        key: 'prev'\n      }, [slot]);\n    },\n    genTransition: function genTransition(location) {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)]);\n    },\n    genWrapper: function genWrapper() {\n      var _this4 = this;\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: function start(e) {\n              return _this4.overflowCheck(e, _this4.onTouchStart);\n            },\n            move: function move(e) {\n              return _this4.overflowCheck(e, _this4.onTouchMove);\n            },\n            end: function end(e) {\n              return _this4.overflowCheck(e, _this4.onTouchEnd);\n            }\n          }\n        }],\n        ref: 'wrapper',\n        on: {\n          scroll: this.onScroll\n        }\n      }, [this.genContent()]);\n    },\n    calculateNewOffset: function calculateNewOffset(direction, widths, rtl, currentScrollOffset) {\n      var sign = rtl ? -1 : 1;\n      var newAbosluteOffset = sign * currentScrollOffset + (direction === 'prev' ? -1 : 1) * widths.wrapper;\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0);\n    },\n    onAffixClick: function onAffixClick(location) {\n      this.$emit(\"click:\".concat(location));\n      this.scrollTo(location);\n    },\n    onResize: function onResize() {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return;\n      this.setWidths();\n    },\n    onTouchStart: function onTouchStart(e) {\n      var content = this.$refs.content;\n      this.startX = this.scrollOffset + e.touchstartX;\n      content.style.setProperty('transition', 'none');\n      content.style.setProperty('willChange', 'transform');\n    },\n    onTouchMove: function onTouchMove(e) {\n      if (!this.canTouch) return;\n\n      if (!this.isSwiping) {\n        // only calculate disableSwipeHorizontal during the first onTouchMove invoke\n        // in order to ensure disableSwipeHorizontal value is consistent between onTouchStart and onTouchEnd\n        var diffX = e.touchmoveX - e.touchstartX;\n        var diffY = e.touchmoveY - e.touchstartY;\n        this.isSwipingHorizontal = Math.abs(diffX) > Math.abs(diffY);\n        this.isSwiping = true;\n      }\n\n      if (this.isSwipingHorizontal) {\n        // sliding horizontally\n        this.scrollOffset = this.startX - e.touchmoveX; // temporarily disable window vertical scrolling\n\n        document.documentElement.style.overflowY = 'hidden';\n      }\n    },\n    onTouchEnd: function onTouchEnd() {\n      if (!this.canTouch) return;\n      var _this$$refs = this.$refs,\n          content = _this$$refs.content,\n          wrapper = _this$$refs.wrapper;\n      var maxScrollOffset = content.clientWidth - wrapper.clientWidth;\n      content.style.setProperty('transition', null);\n      content.style.setProperty('willChange', null);\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0;\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset;\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0;\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset;\n        }\n      }\n\n      this.isSwiping = false; // rollback whole page scrolling to default\n\n      document.documentElement.style.removeProperty('overflow-y');\n    },\n    overflowCheck: function overflowCheck(e, fn) {\n      e.stopPropagation();\n      this.isOverflowing && fn(e);\n    },\n    scrollIntoView\n    /* istanbul ignore next */\n    : function scrollIntoView() {\n      if (!this.selectedItem && this.items.length) {\n        var lastItemPosition = this.items[this.items.length - 1].$el.getBoundingClientRect();\n        var wrapperPosition = this.$refs.wrapper.getBoundingClientRect();\n\n        if (this.$vuetify.rtl && wrapperPosition.right < lastItemPosition.right || !this.$vuetify.rtl && wrapperPosition.left > lastItemPosition.left) {\n          this.scrollTo('prev');\n        }\n      }\n\n      if (!this.selectedItem) {\n        return;\n      }\n\n      if (this.selectedIndex === 0 || !this.centerActive && !this.isOverflowing) {\n        this.scrollOffset = 0;\n      } else if (this.centerActive) {\n        this.scrollOffset = calculateCenteredOffset(this.selectedItem.$el, this.widths, this.$vuetify.rtl);\n      } else if (this.isOverflowing) {\n        this.scrollOffset = calculateUpdatedOffset(this.selectedItem.$el, this.widths, this.$vuetify.rtl, this.scrollOffset);\n      }\n    },\n    scrollTo\n    /* istanbul ignore next */\n    : function scrollTo(location) {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0\n      }, this.$vuetify.rtl, this.scrollOffset);\n    },\n    setWidths: function setWidths() {\n      var _this5 = this;\n\n      window.requestAnimationFrame(function () {\n        if (_this5._isDestroyed) return;\n        var _this5$$refs = _this5.$refs,\n            content = _this5$$refs.content,\n            wrapper = _this5$$refs.wrapper;\n        _this5.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0\n        }; // https://github.com/vuetifyjs/vuetify/issues/13212\n        // We add +1 to the wrappers width to prevent an issue where the `clientWidth`\n        // gets calculated wrongly by the browser if using a different zoom-level.\n\n        _this5.isOverflowing = _this5.widths.wrapper + 1 < _this5.widths.content;\n\n        _this5.scrollIntoView();\n      });\n    }\n  },\n  render: function render(h) {\n    return h('div', this.genData(), [this.genPrev(), this.genWrapper(), this.genNext()]);\n  }\n});\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n  provide: function provide() {\n    return {\n      slideGroup: this\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["VIcon","VFadeTransition","BaseItemGroup","Mobile","Resize","Touch","mixins","composedPath","bias","val","c","x","Math","abs","sign","calculateUpdatedOffset","selectedElement","widths","rtl","currentScrollOffset","clientWidth","offsetLeft","content","totalWidth","wrapper","itemOffset","additionalOffset","max","min","calculateCenteredOffset","offsetCentered","BaseSlideGroup","extend","name","directives","props","activeClass","type","String","centerActive","Boolean","nextIcon","prevIcon","showArrows","validator","v","includes","data","isOverflowing","resizeTimeout","startX","isSwipingHorizontal","isSwiping","scrollOffset","computed","canTouch","window","__cachedNext","genTransition","__cachedPrev","classes","options","call","hasAffixes","isMobile","hasNext","hasPrev","watch","internalValue","$vuetify","scroll","$refs","style","transform","mounted","ResizeObserver","obs","onResize","observe","$el","$on","disconnect","itemsLength","_a","children","length","setWidths","methods","onScroll","scrollLeft","onFocusin","e","el","items","vm","genNext","slot","$scopedSlots","next","$slots","$createElement","staticClass","on","click","onAffixClick","key","genContent","ref","focusin","genData","value","genIcon","location","icon","upperLocation","toUpperCase","slice","hasAffix","disabled","genPrev","prev","genWrapper","start","overflowCheck","onTouchStart","move","onTouchMove","end","onTouchEnd","calculateNewOffset","direction","newAbosluteOffset","$emit","scrollTo","_isDestroyed","touchstartX","setProperty","diffX","touchmoveX","diffY","touchmoveY","touchstartY","document","documentElement","overflowY","maxScrollOffset","removeProperty","fn","stopPropagation","scrollIntoView","selectedItem","lastItemPosition","getBoundingClientRect","wrapperPosition","right","left","selectedIndex","requestAnimationFrame","render","h","provide","slideGroup"],"sourceRoot":"","sources":["../../../src/components/VSlideGroup/VSlideGroup.ts"],"sourcesContent":["// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Mobile from '../../mixins/mobile'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { composedPath } from '../../util/helpers'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchstartY: number\n  touchmoveX: number\n  touchmoveY: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nfunction bias (val: number) {\n  const c = 0.501\n  const x = Math.abs(val)\n  return Math.sign(val) * (x / ((1 / c - 2) * (1 - x) + 1))\n}\n\nexport function calculateUpdatedOffset (\n  selectedElement: HTMLElement,\n  widths: Widths,\n  rtl: boolean,\n  currentScrollOffset: number\n): number {\n  const clientWidth = selectedElement.clientWidth\n  const offsetLeft = rtl\n    ? (widths.content - selectedElement.offsetLeft - clientWidth)\n    : selectedElement.offsetLeft\n\n  if (rtl) {\n    currentScrollOffset = -currentScrollOffset\n  }\n\n  const totalWidth = widths.wrapper + currentScrollOffset\n  const itemOffset = clientWidth + offsetLeft\n  const additionalOffset = clientWidth * 0.4\n\n  if (offsetLeft <= currentScrollOffset) {\n    currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n  } else if (totalWidth <= itemOffset) {\n    currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n  }\n\n  return rtl ? -currentScrollOffset : currentScrollOffset\n}\n\nexport function calculateCenteredOffset (\n  selectedElement: HTMLElement,\n  widths: Widths,\n  rtl: boolean\n): number {\n  const { offsetLeft, clientWidth } = selectedElement\n\n  if (rtl) {\n    const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n    return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n  } else {\n    const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n    return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof BaseItemGroup,\n    typeof Mobile,\n  ]>\n/* eslint-enable indent */\n>(\n  BaseItemGroup,\n  Mobile,\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: (v: any) => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n  },\n\n  data: () => ({\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    isSwipingHorizontal: false,\n    isSwiping: false,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    canTouch (): boolean {\n      return typeof window !== 'undefined'\n    },\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      switch (this.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !this.isMobile\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return this.isOverflowing || Math.abs(this.scrollOffset) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          this.isMobile ||\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !this.isMobile &&\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n      }\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      if (this.$vuetify.rtl) val = -val\n\n      let scroll =\n        val <= 0\n          ? bias(-val)\n          : val > this.widths.content - this.widths.wrapper\n            ? -(this.widths.content - this.widths.wrapper) + bias(this.widths.content - this.widths.wrapper - val)\n            : -val\n\n      if (this.$vuetify.rtl) scroll = -scroll\n\n      this.$refs.content.style.transform = `translateX(${scroll}px)`\n    },\n  },\n\n  mounted () {\n    if (typeof ResizeObserver !== 'undefined') {\n      const obs = new ResizeObserver(() => {\n        this.onResize()\n      })\n      obs.observe(this.$el)\n      obs.observe(this.$refs.content)\n      this.$on('hook:destroyed', () => {\n        obs.disconnect()\n      })\n    } else {\n      let itemsLength = 0\n      this.$on('hook:beforeUpdate', () => {\n        itemsLength = (this.$refs.content?.children || []).length\n      })\n      this.$on('hook:updated', () => {\n        if (itemsLength === (this.$refs.content?.children || []).length) return\n        this.setWidths()\n      })\n    }\n  },\n\n  methods: {\n    onScroll () {\n      this.$refs.wrapper.scrollLeft = 0\n    },\n    onFocusin (e: FocusEvent) {\n      if (!this.isOverflowing) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of composedPath(e)) {\n        for (const vm of this.items) {\n          if (vm.$el === el) {\n            this.scrollOffset = calculateUpdatedOffset(\n              vm.$el as HTMLElement,\n              this.widths,\n              this.$vuetify.rtl,\n              this.scrollOffset\n            )\n            return\n          }\n        }\n      }\n    },\n    // Always generate next for scrollable hint\n    genNext (): VNode | null {\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n        on: {\n          focusin: this.onFocusin,\n        },\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n        on: {\n          scroll: this.onScroll,\n        },\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      if (!this.canTouch) return\n\n      if (!this.isSwiping) {\n        // only calculate disableSwipeHorizontal during the first onTouchMove invoke\n        // in order to ensure disableSwipeHorizontal value is consistent between onTouchStart and onTouchEnd\n        const diffX = e.touchmoveX - e.touchstartX\n        const diffY = e.touchmoveY - e.touchstartY\n        this.isSwipingHorizontal = Math.abs(diffX) > Math.abs(diffY)\n        this.isSwiping = true\n      }\n\n      if (this.isSwipingHorizontal) {\n        // sliding horizontally\n        this.scrollOffset = this.startX - e.touchmoveX\n        // temporarily disable window vertical scrolling\n        document.documentElement.style.overflowY = 'hidden'\n      }\n    },\n    onTouchEnd () {\n      if (!this.canTouch) return\n\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n\n      this.isSwiping = false\n      // rollback whole page scrolling to default\n      document.documentElement.style.removeProperty('overflow-y')\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem && this.items.length) {\n        const lastItemPosition = this.items[this.items.length - 1].$el.getBoundingClientRect()\n        const wrapperPosition = this.$refs.wrapper.getBoundingClientRect()\n\n        if (\n          (this.$vuetify.rtl && wrapperPosition.right < lastItemPosition.right) ||\n          (!this.$vuetify.rtl && wrapperPosition.left > lastItemPosition.left)\n        ) {\n          this.scrollTo('prev')\n        }\n      }\n\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths () {\n      window.requestAnimationFrame(() => {\n        if (this._isDestroyed) return\n\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        // https://github.com/vuetifyjs/vuetify/issues/13212\n        // We add +1 to the wrappers width to prevent an issue where the `clientWidth`\n        // gets calculated wrongly by the browser if using a different zoom-level.\n        this.isOverflowing = this.widths.wrapper + 1 < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}